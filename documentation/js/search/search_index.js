var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AddNodoService.html",[0,1.16,1,1.689]],["body/injectables/AddNodoService.html",[0,1.837,1,2.675,2,2.132,3,0.516,4,0.434,5,0.434,6,3.373,7,3.976,8,2.9,9,0.434,10,1.837,11,4.476,12,2.008,13,1.45,14,3.567,15,4.476,16,5.283,17,1.711,18,1.302,19,0.764,20,3.157,21,3.567,22,1.651,23,0.046,24,1.155,25,1.464,26,2.9,27,3.567,28,1.464,29,1.869,30,1.025,31,1.025,32,2.46,33,2.132,34,0.516,35,0.696,36,3.567,37,3.567,38,3.567,39,2.46,40,3.567,41,0.036,42,0.036]],["title/components/AppComponent.html",[43,0.631,44,0.915]],["body/components/AppComponent.html",[3,0.465,4,0.391,5,0.391,9,0.391,13,1.042,19,0.465,23,0.047,24,1.357,30,0.924,31,0.924,33,2.504,34,0.465,35,0.628,41,0.034,42,0.034,43,1.041,44,1.599,45,1.939,46,1.686,47,1.686,48,1.686,49,1.686,50,2.615,51,1.686,52,2.84,53,2.896,54,2.196,55,3.217,56,2.196,57,4.19,58,0.936,59,4.659,60,1.042,61,1.686,62,1.32,63,4.19,64,2.889,65,3.217,66,3.217,67,3.217,68,2.615,69,3.406,70,3.217,71,2.615,72,3.217,73,3.217,74,2.615,75,2.218,76,2.218,77,2.218,78,1.686,79,2.196,80,1.357,81,1.686,82,2.587,83,1.686,84,1.686,85,1.042,86,1.32,87,1.686,88,1.042,89,1.686,90,1.173,91,1.686,92,1.042,93,1.686,94,1.042,95,1.686,96,1.686,97,1.686]],["title/modules/AppModule.html",[98,2.298,99,1.689]],["body/modules/AppModule.html",[3,0.367,4,0.309,5,0.309,23,0.047,30,1.647,31,0.729,34,0.367,35,0.495,41,0.029,42,0.029,44,1.746,85,1.584,86,1.042,88,1.584,90,1.784,92,1.584,94,1.584,99,3.322,100,1.751,101,2.132,102,2.063,103,2.063,104,2.063,105,2.901,106,2.063,107,1.751,108,2.538,109,3.569,110,3.355,111,3.569,112,3.569,113,2.901,114,1.751,115,3.569,116,3.569,117,2.063,118,3.569,119,2.063,120,3.569,121,3.569,122,2.063,123,2.063,124,2.538,125,3.569,126,2.538,127,2.538,128,3.569,129,2.538,130,3.569,131,2.538,132,3.569,133,2.538,134,3.569,135,2.538,136,3.569,137,2.538,138,3.569,139,2.538,140,3.569,141,2.538,142,3.569,143,2.538,144,3.569,145,2.538,146,3.569,147,2.538,148,3.569,149,2.538,150,3.569,151,2.538,152,3.569,153,2.538,154,3.569,155,2.538,156,3.569,157,2.538,158,3.569,159,1.517,160,1.751,161,1.33,162,2.538,163,2.538,164,3.569,165,1.751,166,2.063,167,1.517,168,2.063,169,2.538,170,2.538,171,2.538,172,2.538]],["title/components/CytoscapeGraphComponent.html",[43,0.631,85,0.915]],["body/components/CytoscapeGraphComponent.html",[1,2.055,3,0.218,4,0.183,5,0.183,6,3.414,9,0.293,10,0.989,12,0.989,13,1.582,17,1.114,18,0.873,19,0.652,22,1.393,23,0.047,24,1.218,25,1.235,26,2.447,28,1.411,29,1.971,30,1.152,31,0.433,34,0.218,35,0.294,41,0.019,42,0.019,43,0.672,44,0.488,45,1.115,46,0.79,47,0.79,48,0.79,49,1.971,51,0.79,52,2.292,53,2.292,54,1.262,56,1.262,58,0.538,61,1.577,62,1.235,64,1.661,71,1.225,75,1.661,76,1.039,77,1.039,78,0.79,79,1.262,80,0.78,81,0.79,82,2.363,83,0.79,84,0.79,85,1.114,86,1.974,87,0.79,88,0.488,89,0.79,90,0.549,91,0.79,92,0.488,93,0.79,94,0.488,95,1.577,96,0.79,97,0.79,161,2.102,167,2.958,173,1.225,174,1.262,175,1.799,176,1.507,177,2.409,178,3.01,179,3.01,180,3.01,181,3.01,182,3.439,183,2.409,184,2.055,185,3.439,186,1.661,187,3.01,188,2.447,189,3.01,190,1.507,191,1.507,192,2.409,193,1.728,194,1.507,195,1.507,196,1.507,197,2.409,198,1.507,199,1.439,200,2.409,201,2.409,202,3.555,203,1.958,204,2.409,205,2.409,206,2.409,207,2.409,208,1.958,209,1.958,210,2.409,211,1.507,212,2.409,213,2.409,214,2.409,215,1.439,216,1.958,217,2.409,218,2.409,219,1.958,220,2.409,221,2.409,222,2.409,223,1.958,224,1.661,225,2.409,226,1.507,227,1.507,228,2.409,229,1.661,230,2.409,231,2.409,232,1.507,233,1.507,234,1.115,235,1.507,236,1.507,237,1.507,238,2.371,239,1.039,240,1.74,241,0.9,242,1.507,243,1.507,244,2.409,245,1.507,246,3.057,247,1.507,248,2.409,249,1.225,250,1.507,251,1.507,252,1.507,253,1.507,254,1.507,255,1.507,256,1.507,257,1.507,258,1.507,259,2.516,260,1.507,261,1.507,262,1.507,263,1.507,264,1.225,265,4.01,266,1.262,267,1.507,268,1.507,269,3.439,270,1.507,271,1.225,272,1.507,273,1.507,274,1.507,275,2.409,276,3.01,277,1.507,278,1.507,279,2.409,280,1.507,281,1.507,282,1.507,283,1.507,284,1.507,285,1.507,286,1.507,287,1.958,288,1.661,289,1.507,290,1.225,291,1.507,292,1.507,293,1.507,294,1.507,295,1.507,296,0.9,297,1.507,298,1.039,299,1.507,300,1.507,301,1.507,302,1.507,303,1.661,304,1.507,305,1.225,306,1.507,307,1.507,308,1.507,309,3.01,310,2.409,311,1.507,312,1.507,313,1.507,314,1.507,315,1.507,316,1.507,317,1.507,318,2.409,319,1.507,320,1.507,321,1.507,322,1.507,323,1.507,324,1.507,325,1.507,326,1.507,327,2.409,328,1.507,329,1.507,330,1.507,331,1.507,332,1.507,333,2.409,334,1.507,335,1.507,336,1.507,337,1.225,338,1.507,339,2.409,340,2.409,341,1.039,342,1.507,343,1.507,344,1.225,345,1.507,346,1.225,347,1.507,348,1.225,349,1.507,350,1.507,351,1.507,352,1.507,353,1.507]],["title/injectables/DataStorageService.html",[0,1.16,354,1.689]],["body/injectables/DataStorageService.html",[0,1.316,2,1.307,3,0.316,4,0.266,5,0.266,9,0.266,10,1.316,12,0.898,13,1.507,18,1.221,19,0.727,22,2.061,23,0.047,24,1.442,25,1.827,28,1.827,30,1.416,31,0.628,32,1.509,33,1.307,34,0.316,35,0.427,41,0.026,42,0.026,60,1.848,80,0.708,119,1.778,215,1.916,296,2.66,354,1.916,355,3.908,356,3.315,357,1.778,358,3.207,359,3.207,360,3.207,361,3.797,362,3.207,363,2.187,364,4.181,365,2.187,366,3.207,367,3.207,368,2.187,369,4.157,370,4.157,371,2.607,372,3.207,373,3.207,374,4.452,375,4.93,376,3.207,377,2.187,378,2.269,379,3.207,380,3.399,381,3.399,382,2.884,383,3.399,384,2.884,385,3.399,386,1.507,387,3.399,388,2.187,389,2.607,390,2.607,391,2.607,392,2.607,393,2.187,394,3.207,395,3.207,396,3.207,397,2.187,398,3.207,399,1.307,400,2.187,401,2.187,402,0.708,403,1.778,404,2.187,405,1.146,406,2.187,407,2.187,408,2.187,409,1.778,410,4.452,411,2.187,412,4.181,413,2.187,414,2.187,415,3.207,416,2.187,417,2.187,418,2.187,419,2.187]],["title/interfaces/Element.html",[80,0.915,420,0.718]],["body/interfaces/Element.html",[3,0.577,4,0.486,5,0.486,9,0.486,17,1.293,19,0.817,23,0.046,34,0.577,41,0.039,42,0.039,58,1.071,60,1.727,80,1.553,234,1.848,386,1.293,420,1.013,421,1.848,422,3.245,423,5.333,424,2.866,425,2.385,426,2.753]],["title/interfaces/Forms.html",[378,1.689,420,0.718]],["body/interfaces/Forms.html",[3,0.436,4,0.367,5,0.367,9,0.367,17,1.559,19,0.829,23,0.046,34,0.436,41,0.032,42,0.032,58,0.897,60,1.899,62,1.238,378,2.4,386,1.462,402,1.559,420,0.766,421,1.396,424,2.4,427,2.452,428,3.32,429,3.32,430,3.32,431,3.32,432,3.32,433,3.32,434,2.877,435,3.32,436,3.32,437,4.814,438,4.814,439,4.814,440,2.452]],["title/components/HeaderComponent.html",[43,0.631,88,0.915]],["body/components/HeaderComponent.html",[3,0.471,4,0.397,5,0.397,9,0.397,10,1.735,12,1.925,13,1.369,23,0.046,24,1.369,28,1.339,29,2.215,30,0.937,31,0.937,34,0.471,35,0.636,41,0.034,42,0.034,43,1.048,44,1.056,45,1.957,46,1.709,47,1.709,48,1.709,49,1.709,51,1.709,52,2.848,53,2.848,54,2.215,56,2.215,64,2.915,68,3.436,78,1.709,79,2.215,80,1.369,81,1.709,82,2.601,83,1.709,84,1.709,85,1.056,86,1.339,87,1.709,88,1.607,89,1.709,90,1.189,91,1.709,92,1.056,93,1.709,94,1.056,95,1.709,96,1.709,97,1.709,174,2.215,175,2.803,184,2.965,409,3.436,441,2.651,442,4.69,443,4.227,444,3.261,445,3.261,446,3.436]],["title/classes/LexicalEntry.html",[35,0.552,402,0.915]],["body/classes/LexicalEntry.html",[3,0.526,4,0.443,5,0.443,9,0.443,13,1.468,17,1.179,18,0.924,19,0.747,23,0.046,34,0.526,35,0.711,41,0.036,42,0.036,58,1.013,60,1.874,62,1.494,234,1.685,382,2.511,384,2.511,386,1.599,402,1.599,424,2.176,426,2.511,428,2.511,429,2.511,430,2.511,433,2.511,434,2.176,435,2.511,436,2.511,440,2.959,447,3.641,448,2.959,449,4.937,450,4.937,451,3.641,452,3.641,453,3.641,454,3.641,455,3.641,456,3.641]],["title/injectables/NodeService.html",[0,1.16,457,1.689]],["body/injectables/NodeService.html",[0,1.82,2,2.1,3,0.508,4,0.427,5,0.427,9,0.427,10,1.82,12,1.994,13,1.436,17,1.138,18,0.892,19,0.641,22,1.626,23,0.047,24,1.138,25,1.442,28,1.442,30,1.395,31,1.009,32,2.423,33,2.1,34,0.508,35,0.686,39,2.423,41,0.036,42,0.036,193,2.094,240,1.626,241,2.1,266,1.841,296,2.1,402,1.652,403,2.856,457,2.649,458,2.856,459,4.434,460,3.514,461,4.434,462,3.514,463,3.514,464,3.514,465,4.434,466,3.514,467,3.514,468,3.514,469,3.514,470,2.856,471,3.514,472,2.856,473,2.856,474,3.514]],["title/interfaces/Pos.html",[18,0.718,420,0.718]],["body/interfaces/Pos.html",[3,0.59,4,0.497,5,0.497,9,0.497,17,1.74,18,1.234,19,0.703,23,0.046,34,0.59,41,0.039,42,0.039,58,1.086,60,1.681,386,1.681,420,1.037,421,1.89,425,3.211,475,3.32]],["title/interfaces/Sense.html",[405,1.481,420,0.718]],["body/interfaces/Sense.html",[3,0.381,4,0.32,5,0.32,9,0.32,17,1.473,18,1.155,19,0.818,20,2.719,23,0.047,34,0.381,41,0.029,42,0.029,58,0.818,60,1.902,199,2.719,234,1.948,386,1.363,402,1.473,405,2.594,420,0.669,421,1.219,426,3.137,428,3.137,429,3.137,430,3.137,433,3.137,434,2.719,436,3.137,476,2.141,477,4.549,478,4.549,479,4.549,480,4.549,481,4.549,482,3.137,483,4.549,484,4.549]],["title/components/TreeComponent.html",[43,0.631,92,0.915]],["body/components/TreeComponent.html",[3,0.126,4,0.106,5,0.106,9,0.106,10,0.625,12,0.625,13,1.684,17,0.787,18,0.7,19,0.746,20,0.521,22,1.601,23,0.047,24,1.224,25,1.42,28,1.606,29,1.813,30,0.87,31,0.25,34,0.126,35,0.17,39,1.05,41,0.012,42,0.012,43,0.616,44,0.282,45,0.705,46,0.457,47,0.457,48,0.457,49,1.062,51,0.457,52,1.813,53,1.813,54,0.798,56,0.798,58,0.34,60,1.485,61,2.338,62,1.831,78,0.457,79,0.798,80,0.493,81,0.457,82,1.273,83,0.457,84,0.457,85,0.282,86,0.832,87,0.457,88,0.282,89,0.457,90,0.318,91,0.457,92,0.787,93,0.457,94,0.282,95,0.457,96,0.457,97,0.457,161,2.26,174,0.798,175,1.211,184,1.452,186,1.05,188,1.237,193,1.551,199,1.648,202,1.237,203,3.275,215,2.337,216,2.241,219,1.974,223,1.237,224,1.398,229,1.05,234,1.68,238,1.675,239,0.601,240,1.51,241,0.521,249,3.18,259,1.811,266,1.902,271,1.237,296,1.648,298,0.601,303,1.675,337,1.647,341,1.675,354,1.811,356,0.601,370,1.647,371,1.647,380,1.647,381,1.647,382,1.398,383,1.647,384,1.398,385,1.647,386,0.982,387,1.647,389,0.709,390,1.974,391,1.974,392,1.237,399,0.521,402,0.282,405,1.273,425,1.452,431,2.385,432,0.601,435,1.675,457,1.949,470,0.709,472,2.241,473,2.464,482,0.601,485,0.709,486,2.027,487,2.027,488,1.522,489,2.027,490,2.027,491,1.522,492,2.027,493,2.027,494,2.027,495,2.027,496,2.027,497,2.027,498,2.027,499,2.027,500,1.522,501,1.522,502,1.522,503,2.429,504,1.522,505,1.522,506,1.522,507,2.429,508,2.027,509,2.027,510,1.522,511,2.027,512,2.027,513,2.027,514,2.027,515,1.522,516,3.63,517,0.872,518,1.522,519,0.872,520,0.872,521,0.872,522,1.522,523,1.522,524,0.872,525,1.522,526,2.429,527,3.63,528,0.872,529,0.872,530,1.522,531,2.429,532,2.464,533,0.872,534,0.872,535,1.522,536,1.522,537,1.522,538,2.757,539,1.522,540,1.522,541,1.522,542,1.237,543,0.872,544,0.872,545,1.522,546,2.429,547,2.027,548,2.027,549,1.522,550,0.872,551,2.027,552,2.429,553,1.522,554,2.429,555,1.522,556,2.464,557,1.974,558,1.522,559,0.872,560,1.522,561,0.872,562,2.027,563,1.522,564,1.522,565,1.522,566,1.522,567,1.522,568,1.522,569,1.522,570,2.027,571,1.522,572,1.522,573,0.872,574,1.522,575,1.522,576,0.872,577,1.522,578,0.872,579,1.522,580,1.522,581,1.522,582,0.872,583,1.522,584,0.709,585,0.872,586,0.872,587,0.872,588,0.872,589,2.429,590,0.872,591,0.872,592,0.872,593,0.872,594,0.872,595,0.872,596,0.872,597,1.522,598,0.872,599,0.872,600,0.872,601,1.522,602,0.872,603,0.872,604,0.872,605,2.757,606,0.872,607,0.872,608,0.872,609,0.872,610,0.872,611,0.872,612,2.757,613,0.872,614,0.872,615,0.872,616,0.872,617,0.872,618,0.872,619,0.872,620,0.872,621,0.872,622,0.872,623,0.601,624,0.872,625,1.522,626,0.872,627,0.872,628,0.872,629,1.452,630,0.872,631,1.522,632,0.872,633,0.872,634,0.872,635,0.872,636,2.429,637,0.872,638,1.522,639,0.872,640,0.872,641,0.872,642,1.522,643,2.429,644,1.522,645,0.872,646,0.872,647,2.757,648,0.872,649,0.872,650,0.872,651,0.872,652,0.872,653,0.872,654,1.237,655,1.522,656,0.872,657,2.027,658,2.027,659,0.872,660,0.872,661,0.872,662,0.709,663,1.237,664,0.872,665,0.709,666,2.027,667,0.872,668,0.872,669,0.872,670,0.872,671,0.872,672,0.872,673,1.237,674,3.261,675,0.872,676,2.429,677,2.429,678,0.872,679,1.522,680,0.872,681,0.872,682,0.872,683,0.872,684,1.522,685,2.027,686,0.872,687,1.522,688,0.872,689,0.872,690,2.757,691,1.522,692,1.522,693,2.757,694,0.872,695,0.872,696,0.872,697,0.872,698,0.872,699,0.872,700,0.872,701,0.872,702,0.872,703,0.872,704,0.872,705,1.522,706,0.872,707,0.872,708,0.872,709,0.872,710,0.872,711,0.872,712,0.872,713,0.872,714,0.872,715,0.872,716,0.872,717,0.872,718,0.872,719,0.872,720,0.872,721,0.872,722,0.872,723,0.872,724,0.872,725,3.78,726,1.522,727,2.429,728,1.522,729,0.872,730,0.709,731,0.872,732,0.709,733,0.872]],["title/interfaces/TreeNodeCustom.html",[193,1.16,420,0.718]],["body/interfaces/TreeNodeCustom.html",[3,0.481,4,0.405,5,0.405,9,0.405,18,1.27,19,0.809,20,2.831,23,0.046,25,2.24,30,1.231,34,0.481,41,0.034,42,0.034,58,0.957,60,1.846,193,1.759,240,1.542,386,1.388,402,1.768,420,0.846,421,1.542,425,2.831,432,3.267,434,2.989,482,3.449,654,3.851,734,2.708,735,2.708,736,4.285,737,4.738,738,3.331,739,3.331,740,3.331,741,3.331,742,3.331,743,3.331]],["title/components/ViewportComponent.html",[43,0.631,94,0.915]],["body/components/ViewportComponent.html",[3,0.251,4,0.211,5,0.211,9,0.328,10,1.106,12,1.355,13,1.671,19,0.682,22,1.864,23,0.047,24,1.44,25,1.653,28,1.749,29,2.33,30,1.224,31,0.499,34,0.251,35,0.339,41,0.022,42,0.022,43,0.737,44,0.563,45,1.247,46,0.91,47,0.91,48,0.91,49,1.73,51,0.91,52,2.408,53,2.408,54,1.412,56,1.412,58,0.602,61,1.412,62,1.106,69,3.024,74,1.412,75,1.198,76,1.198,77,1.198,78,0.91,79,1.412,80,0.873,81,0.91,82,1.95,83,0.91,84,0.91,85,1.205,86,1.355,87,0.91,88,0.563,89,0.91,90,0.633,91,0.91,92,0.563,93,0.91,94,1.205,95,1.73,96,0.91,97,0.91,159,1.038,160,2.566,161,2.573,167,1.038,168,1.412,174,1.412,175,1.973,184,2.223,186,1.858,193,1.749,199,1.61,208,2.19,209,2.19,215,1.038,224,2.277,229,2.566,234,0.804,238,2.566,239,1.198,240,0.804,241,1.038,259,2.546,264,1.412,266,0.91,287,1.412,288,1.198,290,1.412,298,1.198,303,1.858,305,1.412,344,2.19,346,1.412,348,1.412,369,1.412,386,1.205,399,1.038,431,1.858,532,2.19,542,3.024,556,2.19,557,2.19,584,1.412,623,1.198,629,1.61,662,2.684,663,2.19,665,2.19,673,2.19,730,1.412,732,1.412,744,1.412,745,1.737,746,2.695,747,3.301,748,2.695,749,3.301,750,3.72,751,2.695,752,2.695,753,2.695,754,2.695,755,2.695,756,3.301,757,2.695,758,3.301,759,1.737,760,1.737,761,1.737,762,1.737,763,1.737,764,2.695,765,1.737,766,2.695,767,1.737,768,2.695,769,3.72,770,2.695,771,2.695,772,2.695,773,1.737,774,2.695,775,3.72,776,1.737,777,3.301,778,2.695,779,2.695,780,2.695,781,2.695,782,2.695,783,2.695,784,2.695,785,2.695,786,2.695,787,2.695,788,2.695,789,2.695,790,1.737,791,4.027,792,1.737,793,1.737,794,1.737,795,2.695,796,2.695,797,1.737,798,1.737,799,1.737,800,1.737,801,1.737,802,1.737,803,1.412,804,1.737,805,1.737,806,1.737,807,1.737,808,1.737,809,1.737,810,1.737,811,2.695,812,1.737,813,1.737,814,1.737,815,1.737,816,1.737,817,1.737,818,1.737,819,1.737,820,1.737,821,1.737,822,1.737,823,1.737,824,1.737,825,1.737,826,2.695,827,1.737,828,1.737,829,1.737,830,1.737,831,1.737,832,1.737,833,1.737,834,1.737,835,1.737,836,1.412,837,1.737,838,1.737,839,1.737,840,1.737,841,1.737]],["title/coverage.html",[842,3.125]],["body/coverage.html",[0,1.904,1,1.905,5,0.388,6,2.872,7,2.591,8,2.591,18,0.809,19,0.461,23,0.046,35,0.622,41,0.034,42,0.034,43,1.169,44,1.032,50,2.591,80,1.032,85,1.032,88,1.032,90,1.162,92,1.032,94,1.032,167,1.905,173,2.591,193,1.308,240,1.475,341,3.911,354,1.905,355,2.591,356,2.198,357,2.591,378,1.905,402,1.032,405,1.671,420,1.296,422,2.591,427,2.591,441,2.591,448,2.591,457,1.905,458,2.591,475,2.591,476,2.591,485,2.591,629,1.905,734,2.591,735,2.591,744,2.591,836,2.591,842,2.591,843,3.188,844,3.188,845,3.188,846,3.188,847,3.188,848,5.235,849,3.188,850,3.188,851,4.165,852,3.188,853,3.188,854,3.188,855,3.188,856,3.188,857,3.188,858,3.188,859,2.591,860,4.919,861,3.385,862,4.919,863,2.591,864,3.385,865,2.591,866,2.591,867,3.188,868,3.188]],["title/dependencies.html",[101,2.029,869,1.632]],["body/dependencies.html",[23,0.047,31,1.025,41,0.036,42,0.036,86,1.837,101,2.132,110,3.638,113,3.638,114,3.087,117,2.9,122,2.9,123,2.9,159,2.132,160,2.46,161,1.869,165,2.46,166,2.9,246,2.9,288,2.46,399,2.132,803,2.9,870,5.533,871,3.567,872,4.476,873,3.567,874,3.567,875,3.567,876,3.567,877,3.567,878,3.567,879,3.567,880,3.638,881,3.567,882,4.476,883,3.567,884,3.567,885,3.567,886,3.567,887,3.567,888,3.567,889,3.567,890,3.567,891,3.567,892,3.567,893,3.567,894,3.567,895,3.567,896,3.567,897,3.567,898,3.567]],["title/index.html",[9,0.288,899,2.367,900,2.367]],["body/index.html",[4,0.415,23,0.035,24,1.105,41,0.035,42,0.035,43,1.07,107,2.353,159,2.863,165,3.736,174,1.788,446,2.773,629,2.039,869,2.353,901,3.411,902,4.351,903,3.411,904,4.791,905,2.773,906,3.411,907,3.411,908,4.351,909,5.213,910,3.411,911,3.411,912,3.411,913,3.411,914,3.411,915,3.411,916,3.411,917,3.411,918,3.411,919,3.411,920,4.791,921,4.791,922,3.411,923,5.047,924,3.411,925,3.411,926,3.411,927,3.411,928,4.351,929,4.351,930,5.047,931,3.411,932,4.351,933,4.351,934,3.411,935,5.33,936,3.411,937,3.411,938,3.411,939,4.351,940,3.411,941,3.411,942,3.411,943,3.411,944,3.411,945,3.411,946,4.791,947,3.411,948,3.411,949,3.411,950,2.353,951,3.411,952,3.411]],["title/modules.html",[100,2.651]],["body/modules.html",[23,0.041,41,0.041,42,0.041,99,2.656,100,3.065,114,3.065,880,3.613,953,4.445,954,4.445]],["title/overview.html",[950,2.651]],["body/overview.html",[2,2.245,23,0.045,35,0.733,41,0.037,42,0.037,44,1.792,45,1.739,85,1.622,88,1.622,90,1.826,92,1.622,94,1.622,98,3.054,99,3.451,101,2.762,102,3.054,103,3.054,104,3.054,105,3.758,106,3.054,107,2.591,421,1.739,623,3.188,950,2.591,955,3.757,956,3.757,957,3.757]],["title/properties.html",[58,0.758,869,1.632]],["body/properties.html",[23,0.043,41,0.041,42,0.041,58,0.999,905,3.636,958,4.473]],["title/miscellaneous/variables.html",[959,1.924,960,2.76]],["body/miscellaneous/variables.html",[9,0.477,19,0.767,23,0.046,41,0.038,42,0.038,61,2.675,62,2.095,259,2.837,266,2.057,424,2.345,859,3.19,861,4.311,863,3.19,864,3.19,865,3.859,866,3.859,959,3.19,960,3.19,961,4.747,962,3.925,963,3.925,964,3.925,965,3.925,966,4.747,967,4.747]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"injectables/AddNodoService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoscapeGraphComponent.html":{},"injectables/DataStorageService.html":{},"interfaces/Element.html":{},"interfaces/Forms.html":{},"components/HeaderComponent.html":{},"classes/LexicalEntry.html":{},"injectables/NodeService.html":{},"interfaces/Pos.html":{},"interfaces/Sense.html":{},"components/TreeComponent.html":{},"interfaces/TreeNodeCustom.html":{},"components/ViewportComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":341,"title":{},"body":{"components/CytoscapeGraphComponent.html":{},"components/TreeComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":958,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":263,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["0.11.1",{"_index":878,"title":{},"body":{"dependencies.html":{}}}],["0.11.4",{"_index":898,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":255,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["0.25em",{"_index":351,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["0.8rem",{"_index":589,"title":{},"body":{"components/TreeComponent.html":{}}}],["0/1",{"_index":862,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":851,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":846,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":852,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":848,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":853,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":623,"title":{},"body":{"components/TreeComponent.html":{},"components/ViewportComponent.html":{},"overview.html":{}}}],["1/14",{"_index":847,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":855,"title":{},"body":{"coverage.html":{}}}],["100px",{"_index":841,"title":{},"body":{"components/ViewportComponent.html":{}}}],["13.1.0",{"_index":885,"title":{},"body":{"dependencies.html":{}}}],["14.1.2",{"_index":893,"title":{},"body":{"dependencies.html":{}}}],["14.2.0",{"_index":870,"title":{},"body":{"dependencies.html":{}}}],["14.2.5",{"_index":872,"title":{},"body":{"dependencies.html":{}}}],["14.2.6",{"_index":906,"title":{},"body":{"index.html":{}}}],["17",{"_index":857,"title":{},"body":{"coverage.html":{}}}],["1px",{"_index":287,"title":{},"body":{"components/CytoscapeGraphComponent.html":{},"components/ViewportComponent.html":{}}}],["1rem",{"_index":591,"title":{},"body":{"components/TreeComponent.html":{}}}],["2.0.0",{"_index":889,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":896,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":597,"title":{},"body":{"components/TreeComponent.html":{}}}],["236",{"_index":780,"title":{},"body":{"components/ViewportComponent.html":{}}}],["3",{"_index":956,"title":{},"body":{"overview.html":{}}}],["3.2.0",{"_index":886,"title":{},"body":{"dependencies.html":{}}}],["3.23.0",{"_index":888,"title":{},"body":{"dependencies.html":{}}}],["4px",{"_index":833,"title":{},"body":{"components/ViewportComponent.html":{}}}],["5",{"_index":957,"title":{},"body":{"overview.html":{}}}],["5.0",{"_index":257,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["5.2.2",{"_index":887,"title":{},"body":{"dependencies.html":{}}}],["5/7",{"_index":850,"title":{},"body":{"coverage.html":{}}}],["500px",{"_index":634,"title":{},"body":{"components/TreeComponent.html":{}}}],["5px;font",{"_index":291,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["5vh",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["6",{"_index":955,"title":{},"body":{"overview.html":{}}}],["6.0.1",{"_index":891,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":882,"title":{},"body":{"dependencies.html":{}}}],["6/55",{"_index":856,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":836,"title":{},"body":{"components/ViewportComponent.html":{},"coverage.html":{}}}],["7.5.0",{"_index":894,"title":{},"body":{"dependencies.html":{}}}],["7/39",{"_index":858,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":849,"title":{},"body":{"coverage.html":{}}}],["94.7vh",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/ViewportComponent.html":{}}}],["99",{"_index":723,"title":{},"body":{"components/TreeComponent.html":{}}}],["9999",{"_index":349,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["actual_component",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/CytoscapeGraphComponent.html":{},"components/HeaderComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["add",{"_index":942,"title":{},"body":{"index.html":{}}}],["addelement",{"_index":192,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["addformchildren",{"_index":500,"title":{},"body":{"components/TreeComponent.html":{}}}],["addformchildren(idnode",{"_index":549,"title":{},"body":{"components/TreeComponent.html":{}}}],["addnodo",{"_index":11,"title":{},"body":{"injectables/AddNodoService.html":{}}}],["addnodo(cy",{"_index":15,"title":{},"body":{"injectables/AddNodoService.html":{}}}],["addnodoservice",{"_index":1,"title":{"injectables/AddNodoService.html":{}},"body":{"injectables/AddNodoService.html":{},"components/CytoscapeGraphComponent.html":{},"coverage.html":{}}}],["addsensechildren",{"_index":501,"title":{},"body":{"components/TreeComponent.html":{}}}],["addsensechildren(idnode",{"_index":558,"title":{},"body":{"components/TreeComponent.html":{}}}],["aggiungo",{"_index":201,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["al",{"_index":570,"title":{},"body":{"components/TreeComponent.html":{}}}],["alberatura",{"_index":526,"title":{},"body":{"components/TreeComponent.html":{}}}],["alcun",{"_index":703,"title":{},"body":{"components/TreeComponent.html":{}}}],["all'apertura",{"_index":539,"title":{},"body":{"components/TreeComponent.html":{}}}],["alla",{"_index":784,"title":{},"body":{"components/ViewportComponent.html":{}}}],["alle",{"_index":205,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["altrimenti",{"_index":672,"title":{},"body":{"components/TreeComponent.html":{}}}],["angular",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"components/ViewportComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":803,"title":{},"body":{"components/ViewportComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":871,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":873,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"injectables/DataStorageService.html":{}}}],["angular/compiler",{"_index":874,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"injectables/AddNodoService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoscapeGraphComponent.html":{},"injectables/DataStorageService.html":{},"components/HeaderComponent.html":{},"injectables/NodeService.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":875,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":877,"title":{},"body":{"dependencies.html":{}}}],["angularresizeeventmodule",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["animate",{"_index":800,"title":{},"body":{"components/ViewportComponent.html":{}}}],["app",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/CytoscapeGraphComponent.html":{},"components/HeaderComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["app.component",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss','mediaqueries/mediaquery.scss",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss,mediaqueries/mediaquery.scss",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":44,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoscapeGraphComponent.html":{},"components/HeaderComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applexicongraph",{"_index":901,"title":{},"body":{"index.html":{}}}],["applicano",{"_index":781,"title":{},"body":{"components/ViewportComponent.html":{}}}],["application",{"_index":446,"title":{},"body":{"components/HeaderComponent.html":{},"index.html":{}}}],["appmodule",{"_index":99,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["aprire",{"_index":580,"title":{},"body":{"components/TreeComponent.html":{}}}],["arguments",{"_index":543,"title":{},"body":{"components/TreeComponent.html":{}}}],["array",{"_index":555,"title":{},"body":{"components/TreeComponent.html":{}}}],["artifacts",{"_index":924,"title":{},"body":{"index.html":{}}}],["author",{"_index":382,"title":{},"body":{"injectables/DataStorageService.html":{},"classes/LexicalEntry.html":{},"components/TreeComponent.html":{}}}],["auto",{"_index":731,"title":{},"body":{"components/TreeComponent.html":{}}}],["automatically",{"_index":914,"title":{},"body":{"index.html":{}}}],["babfc4",{"_index":834,"title":{},"body":{"components/ViewportComponent.html":{}}}],["backend",{"_index":410,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["background",{"_index":346,"title":{},"body":{"components/CytoscapeGraphComponent.html":{},"components/ViewportComponent.html":{}}}],["base",{"_index":204,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["beta/service/lexicon/data",{"_index":415,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["beta/service/lexicon/data/'+identratalessicale",{"_index":413,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["beta/service/lexicon/data/lexicalentries",{"_index":411,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["beta/service/lexicon/statistics/pos?key=lexodemo",{"_index":419,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["black;border",{"_index":286,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["block",{"_index":733,"title":{},"body":{"components/TreeComponent.html":{}}}],["boolean",{"_index":234,"title":{},"body":{"components/CytoscapeGraphComponent.html":{},"interfaces/Element.html":{},"classes/LexicalEntry.html":{},"interfaces/Sense.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["bootstrap",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["bootstrap/ng",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["border",{"_index":344,"title":{},"body":{"components/CytoscapeGraphComponent.html":{},"components/ViewportComponent.html":{}}}],["bottom",{"_index":337,"title":{},"body":{"components/CytoscapeGraphComponent.html":{},"components/TreeComponent.html":{}}}],["breakpoint",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/CytoscapeGraphComponent.html":{},"components/ViewportComponent.html":{}}}],["browse",{"_index":954,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":923,"title":{},"body":{"index.html":{}}}],["button",{"_index":832,"title":{},"body":{"components/ViewportComponent.html":{}}}],["buttonmodule",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["c",{"_index":811,"title":{},"body":{"components/ViewportComponent.html":{}}}],["c4c8cc;border",{"_index":289,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["capabilities",{"_index":944,"title":{},"body":{"index.html":{}}}],["caricamento",{"_index":547,"title":{},"body":{"components/TreeComponent.html":{}}}],["center",{"_index":335,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["change",{"_index":916,"title":{},"body":{"index.html":{}}}],["che",{"_index":552,"title":{},"body":{"components/TreeComponent.html":{}}}],["check",{"_index":949,"title":{},"body":{"index.html":{}}}],["checked",{"_index":212,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["chiamata",{"_index":680,"title":{},"body":{"components/TreeComponent.html":{}}}],["chiamo",{"_index":812,"title":{},"body":{"components/ViewportComponent.html":{}}}],["child1level",{"_index":700,"title":{},"body":{"components/TreeComponent.html":{}}}],["child2l",{"_index":642,"title":{},"body":{"components/TreeComponent.html":{}}}],["childf1l",{"_index":679,"title":{},"body":{"components/TreeComponent.html":{}}}],["childf2l",{"_index":644,"title":{},"body":{"components/TreeComponent.html":{}}}],["children",{"_index":473,"title":{},"body":{"injectables/NodeService.html":{},"components/TreeComponent.html":{}}}],["childrenform",{"_index":636,"title":{},"body":{"components/TreeComponent.html":{}}}],["childrenform.push(child2l",{"_index":646,"title":{},"body":{"components/TreeComponent.html":{}}}],["childrensense",{"_index":647,"title":{},"body":{"components/TreeComponent.html":{}}}],["childrensense.push(child2l",{"_index":651,"title":{},"body":{"components/TreeComponent.html":{}}}],["childs1l",{"_index":687,"title":{},"body":{"components/TreeComponent.html":{}}}],["childs2l",{"_index":271,"title":{},"body":{"components/CytoscapeGraphComponent.html":{},"components/TreeComponent.html":{}}}],["choice",{"_index":938,"title":{},"body":{"index.html":{}}}],["class",{"_index":35,"title":{"classes/LexicalEntry.html":{}},"body":{"injectables/AddNodoService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoscapeGraphComponent.html":{},"injectables/DataStorageService.html":{},"components/HeaderComponent.html":{},"classes/LexicalEntry.html":{},"injectables/NodeService.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":447,"title":{},"body":{"classes/LexicalEntry.html":{}}}],["cli",{"_index":904,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":918,"title":{},"body":{"index.html":{}}}],["colonna",{"_index":785,"title":{},"body":{"components/ViewportComponent.html":{}}}],["color",{"_index":284,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["color:#f8f9fa",{"_index":830,"title":{},"body":{"components/ViewportComponent.html":{}}}],["columns",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["come",{"_index":217,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["command",{"_index":939,"title":{},"body":{"index.html":{}}}],["completare",{"_index":225,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["completiondate",{"_index":455,"title":{},"body":{"classes/LexicalEntry.html":{}}}],["component",{"_index":43,"title":{"components/AppComponent.html":{},"components/CytoscapeGraphComponent.html":{},"components/HeaderComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CytoscapeGraphComponent.html":{},"components/HeaderComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/CytoscapeGraphComponent.html":{},"components/HeaderComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["componente",{"_index":209,"title":{},"body":{"components/CytoscapeGraphComponent.html":{},"components/ViewportComponent.html":{}}}],["components",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/CytoscapeGraphComponent.html":{},"components/HeaderComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{},"overview.html":{}}}],["con",{"_index":567,"title":{},"body":{"components/TreeComponent.html":{}}}],["concept",{"_index":477,"title":{},"body":{"interfaces/Sense.html":{}}}],["conceptinstancename",{"_index":478,"title":{},"body":{"interfaces/Sense.html":{}}}],["confidence",{"_index":428,"title":{},"body":{"interfaces/Forms.html":{},"classes/LexicalEntry.html":{},"interfaces/Sense.html":{}}}],["console.log('scroll",{"_index":627,"title":{},"body":{"components/TreeComponent.html":{}}}],["const",{"_index":251,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["constructor",{"_index":12,"title":{},"body":{"injectables/AddNodoService.html":{},"components/CytoscapeGraphComponent.html":{},"injectables/DataStorageService.html":{},"components/HeaderComponent.html":{},"injectables/NodeService.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["constructor(addelement",{"_index":190,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["constructor(datastorageservice",{"_index":517,"title":{},"body":{"components/TreeComponent.html":{}}}],["constructor(http",{"_index":363,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["constructor(library",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["constructor(private",{"_index":407,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["container",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/CytoscapeGraphComponent.html":{}}}],["content",{"_index":276,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["content.innerhtml",{"_index":278,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["contenttorender",{"_index":269,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["context",{"_index":865,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["convertfromlexicalsenses",{"_index":459,"title":{},"body":{"injectables/NodeService.html":{}}}],["convertfromlexicalsenses(lexentrylist",{"_index":461,"title":{},"body":{"injectables/NodeService.html":{}}}],["core",{"_index":881,"title":{},"body":{"dependencies.html":{}}}],["count",{"_index":425,"title":{},"body":{"interfaces/Element.html":{},"interfaces/Pos.html":{},"components/TreeComponent.html":{},"interfaces/TreeNodeCustom.html":{}}}],["count?:number",{"_index":740,"title":{},"body":{"interfaces/TreeNodeCustom.html":{}}}],["coverage",{"_index":842,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creationdate",{"_index":429,"title":{},"body":{"interfaces/Forms.html":{},"classes/LexicalEntry.html":{},"interfaces/Sense.html":{}}}],["creator",{"_index":430,"title":{},"body":{"interfaces/Forms.html":{},"classes/LexicalEntry.html":{},"interfaces/Sense.html":{}}}],["custom.model",{"_index":241,"title":{},"body":{"components/CytoscapeGraphComponent.html":{},"injectables/NodeService.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["custom.model.ts",{"_index":735,"title":{},"body":{"interfaces/TreeNodeCustom.html":{},"coverage.html":{}}}],["cy",{"_index":26,"title":{},"body":{"injectables/AddNodoService.html":{},"components/CytoscapeGraphComponent.html":{}}}],["cy.add",{"_index":36,"title":{},"body":{"injectables/AddNodoService.html":{}}}],["cytoscape",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoscapeGraphComponent.html":{},"components/HeaderComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{},"dependencies.html":{}}}],["cytoscape.use(popper",{"_index":247,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["cytoscapegraphcomponent",{"_index":85,"title":{"components/CytoscapeGraphComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoscapeGraphComponent.html":{},"components/HeaderComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{},"coverage.html":{},"overview.html":{}}}],["da",{"_index":224,"title":{},"body":{"components/CytoscapeGraphComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["dal",{"_index":208,"title":{},"body":{"components/CytoscapeGraphComponent.html":{},"components/ViewportComponent.html":{}}}],["data",{"_index":39,"title":{},"body":{"injectables/AddNodoService.html":{},"injectables/NodeService.html":{},"components/TreeComponent.html":{}}}],["datastorageservice",{"_index":354,"title":{"injectables/DataStorageService.html":{}},"body":{"injectables/DataStorageService.html":{},"components/TreeComponent.html":{},"coverage.html":{}}}],["dati",{"_index":568,"title":{},"body":{"components/TreeComponent.html":{}}}],["declarations",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["decorators",{"_index":584,"title":{},"body":{"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["default",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/CytoscapeGraphComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":13,"title":{},"body":{"injectables/AddNodoService.html":{},"components/AppComponent.html":{},"components/CytoscapeGraphComponent.html":{},"injectables/DataStorageService.html":{},"components/HeaderComponent.html":{},"classes/LexicalEntry.html":{},"injectables/NodeService.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["definition",{"_index":20,"title":{},"body":{"injectables/AddNodoService.html":{},"interfaces/Sense.html":{},"components/TreeComponent.html":{},"interfaces/TreeNodeCustom.html":{}}}],["definition?:string",{"_index":743,"title":{},"body":{"interfaces/TreeNodeCustom.html":{}}}],["degli",{"_index":782,"title":{},"body":{"components/ViewportComponent.html":{}}}],["dell'app",{"_index":540,"title":{},"body":{"components/TreeComponent.html":{}}}],["della",{"_index":221,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["dello",{"_index":213,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["dependencies",{"_index":101,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":199,"title":{},"body":{"components/CytoscapeGraphComponent.html":{},"interfaces/Sense.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["dev",{"_index":911,"title":{},"body":{"index.html":{}}}],["deve",{"_index":702,"title":{},"body":{"components/TreeComponent.html":{}}}],["development",{"_index":907,"title":{},"body":{"index.html":{}}}],["di",{"_index":556,"title":{},"body":{"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["diminuite",{"_index":788,"title":{},"body":{"components/ViewportComponent.html":{}}}],["direction",{"_index":827,"title":{},"body":{"components/ViewportComponent.html":{}}}],["directive",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/CytoscapeGraphComponent.html":{},"components/HeaderComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["directives",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/CytoscapeGraphComponent.html":{},"components/HeaderComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":922,"title":{},"body":{"index.html":{}}}],["directory",{"_index":927,"title":{},"body":{"index.html":{}}}],["display",{"_index":732,"title":{},"body":{"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["dist",{"_index":926,"title":{},"body":{"index.html":{}}}],["div",{"_index":342,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["dividermodule",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["document.body.appendchild(content",{"_index":295,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["document.createelement(\"div",{"_index":277,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["document.createelement(\"style",{"_index":280,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["document.createtextnode(\"div",{"_index":282,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["document.getelementbyid('cy",{"_index":253,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["document.head.appendchild(x",{"_index":294,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["documentation",{"_index":843,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/CytoscapeGraphComponent.html":{},"components/HeaderComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["drag",{"_index":630,"title":{},"body":{"components/TreeComponent.html":{}}}],["dragdropmodule",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["draggato",{"_index":563,"title":{},"body":{"components/TreeComponent.html":{}}}],["draggedele",{"_index":489,"title":{},"body":{"components/TreeComponent.html":{}}}],["drop",{"_index":182,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["drop(evt",{"_index":197,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["dropdownmodule",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["dynamic",{"_index":876,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":229,"title":{},"body":{"components/CytoscapeGraphComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["e.definition",{"_index":649,"title":{},"body":{"components/TreeComponent.html":{}}}],["e.forminstancename",{"_index":645,"title":{},"body":{"components/TreeComponent.html":{}}}],["e.label",{"_index":643,"title":{},"body":{"components/TreeComponent.html":{}}}],["e.morphology.map(e",{"_index":639,"title":{},"body":{"components/TreeComponent.html":{}}}],["e.senseinstancename",{"_index":650,"title":{},"body":{"components/TreeComponent.html":{}}}],["e.value",{"_index":640,"title":{},"body":{"components/TreeComponent.html":{}}}],["e2e",{"_index":936,"title":{},"body":{"index.html":{}}}],["el.children",{"_index":684,"title":{},"body":{"components/TreeComponent.html":{}}}],["el.elements.foreach(elemento",{"_index":675,"title":{},"body":{"components/TreeComponent.html":{}}}],["el.foreach(e",{"_index":638,"title":{},"body":{"components/TreeComponent.html":{}}}],["element",{"_index":80,"title":{"interfaces/Element.html":{}},"body":{"components/AppComponent.html":{},"components/CytoscapeGraphComponent.html":{},"injectables/DataStorageService.html":{},"interfaces/Element.html":{},"components/HeaderComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{},"coverage.html":{}}}],["elemento.count",{"_index":677,"title":{},"body":{"components/TreeComponent.html":{}}}],["elemento.label",{"_index":676,"title":{},"body":{"components/TreeComponent.html":{}}}],["elements",{"_index":423,"title":{},"body":{"interfaces/Element.html":{}}}],["elements?key=lexodemo",{"_index":414,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["emitte",{"_index":530,"title":{},"body":{"components/TreeComponent.html":{}}}],["emitter",{"_index":535,"title":{},"body":{"components/TreeComponent.html":{}}}],["end",{"_index":935,"title":{},"body":{"index.html":{}}}],["entrata",{"_index":372,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["entrate",{"_index":390,"title":{},"body":{"injectables/DataStorageService.html":{},"components/TreeComponent.html":{}}}],["entry",{"_index":538,"title":{},"body":{"components/TreeComponent.html":{}}}],["environment",{"_index":861,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["espandere",{"_index":671,"title":{},"body":{"components/TreeComponent.html":{}}}],["espansione",{"_index":579,"title":{},"body":{"components/TreeComponent.html":{}}}],["event",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"components/CytoscapeGraphComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{},"dependencies.html":{}}}],["event.checked",{"_index":340,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["event.newrect.height",{"_index":821,"title":{},"body":{"components/ViewportComponent.html":{}}}],["event.newrect.width",{"_index":819,"title":{},"body":{"components/ViewportComponent.html":{}}}],["event.node.children",{"_index":685,"title":{},"body":{"components/TreeComponent.html":{}}}],["event.node.data",{"_index":652,"title":{},"body":{"components/TreeComponent.html":{}}}],["event.node.parent",{"_index":653,"title":{},"body":{"components/TreeComponent.html":{}}}],["event.stoppropagation",{"_index":704,"title":{},"body":{"components/TreeComponent.html":{}}}],["event.target.data().definition",{"_index":272,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["event.target.data().id",{"_index":273,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["event.target.data().type",{"_index":270,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["event.target.offsetheight",{"_index":620,"title":{},"body":{"components/TreeComponent.html":{}}}],["event.target.popper",{"_index":275,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["event.target.popperrefobj",{"_index":274,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["event.target.popperrefobj.destroy",{"_index":302,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["event.target.popperrefobj.state.elements.popper.remove",{"_index":301,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["event.target.scrollheight",{"_index":622,"title":{},"body":{"components/TreeComponent.html":{}}}],["event.target.scrolltop",{"_index":621,"title":{},"body":{"components/TreeComponent.html":{}}}],["eventemitter",{"_index":527,"title":{},"body":{"components/TreeComponent.html":{}}}],["evento",{"_index":777,"title":{},"body":{"components/ViewportComponent.html":{}}}],["events",{"_index":353,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["eventssubject",{"_index":747,"title":{},"body":{"components/ViewportComponent.html":{}}}],["evt",{"_index":200,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["evt.x",{"_index":304,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["evt.y",{"_index":306,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["example",{"_index":343,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["execute",{"_index":932,"title":{},"body":{"index.html":{}}}],["expanded",{"_index":748,"title":{},"body":{"components/ViewportComponent.html":{}}}],["expanded:boolean",{"_index":806,"title":{},"body":{"components/ViewportComponent.html":{}}}],["export",{"_index":34,"title":{},"body":{"injectables/AddNodoService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoscapeGraphComponent.html":{},"injectables/DataStorageService.html":{},"interfaces/Element.html":{},"interfaces/Forms.html":{},"components/HeaderComponent.html":{},"classes/LexicalEntry.html":{},"injectables/NodeService.html":{},"interfaces/Pos.html":{},"interfaces/Sense.html":{},"components/TreeComponent.html":{},"interfaces/TreeNodeCustom.html":{},"components/ViewportComponent.html":{}}}],["extends",{"_index":736,"title":{},"body":{"interfaces/TreeNodeCustom.html":{}}}],["f6f8fa;color",{"_index":285,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["faiconlibrary",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["false",{"_index":266,"title":{},"body":{"components/CytoscapeGraphComponent.html":{},"injectables/NodeService.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{},"miscellaneous/variables.html":{}}}],["fetchelements",{"_index":358,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["fetchelements(identratalessicale",{"_index":367,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["fetchforms",{"_index":359,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["fetchforms(identratalessicale",{"_index":376,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["fetchlexicalentries",{"_index":360,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["fetchlexicalentries(text",{"_index":379,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["fetchpos",{"_index":361,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["fetchpos():observable",{"_index":418,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["fetchsense",{"_index":362,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["fetchsense(identratalessicale",{"_index":396,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["fff",{"_index":347,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["figli",{"_index":371,"title":{},"body":{"injectables/DataStorageService.html":{},"components/TreeComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AddNodoService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoscapeGraphComponent.html":{},"injectables/DataStorageService.html":{},"interfaces/Element.html":{},"interfaces/Forms.html":{},"components/HeaderComponent.html":{},"classes/LexicalEntry.html":{},"injectables/NodeService.html":{},"interfaces/Pos.html":{},"interfaces/Sense.html":{},"components/TreeComponent.html":{},"interfaces/TreeNodeCustom.html":{},"components/ViewportComponent.html":{},"coverage.html":{}}}],["files",{"_index":917,"title":{},"body":{"index.html":{}}}],["filtri",{"_index":522,"title":{},"body":{"components/TreeComponent.html":{}}}],["filtro",{"_index":394,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["first",{"_index":941,"title":{},"body":{"index.html":{}}}],["flex",{"_index":826,"title":{},"body":{"components/ViewportComponent.html":{}}}],["float:left",{"_index":831,"title":{},"body":{"components/ViewportComponent.html":{}}}],["fluid",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["font",{"_index":786,"title":{},"body":{"components/ViewportComponent.html":{}}}],["fontawesome",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["fontawesomemodule",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["fonticon",{"_index":490,"title":{},"body":{"components/TreeComponent.html":{}}}],["fonts",{"_index":491,"title":{},"body":{"components/TreeComponent.html":{}}}],["fonts='1rem",{"_index":632,"title":{},"body":{"components/TreeComponent.html":{}}}],["fontspos",{"_index":492,"title":{},"body":{"components/TreeComponent.html":{}}}],["form",{"_index":431,"title":{},"body":{"interfaces/Forms.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["form(childf2level",{"_index":565,"title":{},"body":{"components/TreeComponent.html":{}}}],["forma",{"_index":664,"title":{},"body":{"components/TreeComponent.html":{}}}],["formchid",{"_index":691,"title":{},"body":{"components/TreeComponent.html":{}}}],["forme",{"_index":678,"title":{},"body":{"components/TreeComponent.html":{}}}],["forminstancename",{"_index":432,"title":{},"body":{"interfaces/Forms.html":{},"components/TreeComponent.html":{},"interfaces/TreeNodeCustom.html":{}}}],["forminstancename?:string",{"_index":741,"title":{},"body":{"interfaces/TreeNodeCustom.html":{}}}],["formnode",{"_index":187,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["formnodeelements",{"_index":178,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["formreceived",{"_index":756,"title":{},"body":{"components/ViewportComponent.html":{}}}],["forms",{"_index":378,"title":{"interfaces/Forms.html":{}},"body":{"injectables/DataStorageService.html":{},"interfaces/Forms.html":{},"coverage.html":{}}}],["forms?key=lexodemo",{"_index":416,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["formsmodule",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["formtype",{"_index":381,"title":{},"body":{"injectables/DataStorageService.html":{},"components/TreeComponent.html":{}}}],["fortawesome/angular",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["fortawesome/fontawesome",{"_index":879,"title":{},"body":{"dependencies.html":{}}}],["fortawesome/free",{"_index":883,"title":{},"body":{"dependencies.html":{}}}],["freccia",{"_index":670,"title":{},"body":{"components/TreeComponent.html":{}}}],["further",{"_index":945,"title":{},"body":{"index.html":{}}}],["generate",{"_index":920,"title":{},"body":{"index.html":{}}}],["generated",{"_index":903,"title":{},"body":{"index.html":{}}}],["getting",{"_index":899,"title":{"index.html":{}},"body":{}}],["gloss",{"_index":479,"title":{},"body":{"interfaces/Sense.html":{}}}],["go",{"_index":948,"title":{},"body":{"index.html":{}}}],["graph",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/CytoscapeGraphComponent.html":{},"components/HeaderComponent.html":{}}}],["graph'},{'name",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/CytoscapeGraphComponent.html":{},"components/HeaderComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["graph.component",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"components/ViewportComponent.html":{}}}],["graph.component.html",{"_index":177,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["graph.component.scss",{"_index":248,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["graph.component.scss,../mediaqueries/mediaquery.scss",{"_index":176,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["graph.component.ts",{"_index":173,"title":{},"body":{"components/CytoscapeGraphComponent.html":{},"coverage.html":{}}}],["graph.component.ts:118",{"_index":227,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["graph.component.ts:127",{"_index":211,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["graph.component.ts:13",{"_index":191,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["graph.component.ts:16",{"_index":232,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["graph.component.ts:18",{"_index":195,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["graph.component.ts:19",{"_index":196,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["graph.component.ts:20",{"_index":194,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["graph.component.ts:22",{"_index":236,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["graph.component.ts:23",{"_index":237,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["graph.component.ts:24",{"_index":233,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["graph.component.ts:26",{"_index":235,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["graph.component.ts:27",{"_index":226,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["graph.component.ts:80",{"_index":198,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["graph/cytoscape",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"components/CytoscapeGraphComponent.html":{},"components/ViewportComponent.html":{},"coverage.html":{}}}],["graph/servizi/add",{"_index":7,"title":{},"body":{"injectables/AddNodoService.html":{},"coverage.html":{}}}],["group",{"_index":37,"title":{},"body":{"injectables/AddNodoService.html":{}}}],["ha",{"_index":667,"title":{},"body":{"components/TreeComponent.html":{}}}],["halign",{"_index":334,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["haschildren",{"_index":426,"title":{},"body":{"interfaces/Element.html":{},"classes/LexicalEntry.html":{},"interfaces/Sense.html":{}}}],["header",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/CytoscapeGraphComponent.html":{},"components/HeaderComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["header.component.html",{"_index":443,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":442,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.component",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["headercomponent",{"_index":88,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoscapeGraphComponent.html":{},"components/HeaderComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/ViewportComponent.html":{}}}],["help",{"_index":946,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":839,"title":{},"body":{"components/ViewportComponent.html":{}}}],["hideedgesonviewport",{"_index":261,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["horizontal",{"_index":838,"title":{},"body":{"components/ViewportComponent.html":{}}}],["host",{"_index":729,"title":{},"body":{"components/TreeComponent.html":{}}}],["hostlistener",{"_index":610,"title":{},"body":{"components/TreeComponent.html":{}}}],["hostlistener(\"scroll",{"_index":619,"title":{},"body":{"components/TreeComponent.html":{}}}],["hostlistener('scroll",{"_index":585,"title":{},"body":{"components/TreeComponent.html":{}}}],["hostlisteners",{"_index":515,"title":{},"body":{"components/TreeComponent.html":{}}}],["html",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/CytoscapeGraphComponent.html":{},"components/HeaderComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["http",{"_index":366,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["http://localhost:4200",{"_index":913,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":364,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["httpclientmodule",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["icone",{"_index":787,"title":{},"body":{"components/ViewportComponent.html":{}}}],["icons",{"_index":884,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":16,"title":{},"body":{"injectables/AddNodoService.html":{}}}],["identifier",{"_index":844,"title":{},"body":{"coverage.html":{}}}],["identratalessicale",{"_index":374,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["idnode",{"_index":554,"title":{},"body":{"components/TreeComponent.html":{}}}],["if($event",{"_index":815,"title":{},"body":{"components/ViewportComponent.html":{}}}],["if(event.newrect.width",{"_index":822,"title":{},"body":{"components/ViewportComponent.html":{}}}],["if(this.formtype",{"_index":624,"title":{},"body":{"components/TreeComponent.html":{}}}],["if(this.scrolltotop",{"_index":626,"title":{},"body":{"components/TreeComponent.html":{}}}],["il",{"_index":202,"title":{},"body":{"components/CytoscapeGraphComponent.html":{},"components/TreeComponent.html":{}}}],["implements",{"_index":174,"title":{},"body":{"components/CytoscapeGraphComponent.html":{},"components/HeaderComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{},"index.html":{}}}],["import",{"_index":30,"title":{},"body":{"injectables/AddNodoService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoscapeGraphComponent.html":{},"injectables/DataStorageService.html":{},"components/HeaderComponent.html":{},"injectables/NodeService.html":{},"components/TreeComponent.html":{},"interfaces/TreeNodeCustom.html":{},"components/ViewportComponent.html":{}}}],["imports",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"injectables/AddNodoService.html":{},"components/AppComponent.html":{},"components/CytoscapeGraphComponent.html":{},"injectables/DataStorageService.html":{},"interfaces/Element.html":{},"interfaces/Forms.html":{},"components/HeaderComponent.html":{},"classes/LexicalEntry.html":{},"injectables/NodeService.html":{},"interfaces/Pos.html":{},"interfaces/Sense.html":{},"components/TreeComponent.html":{},"interfaces/TreeNodeCustom.html":{},"components/ViewportComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AddNodoService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoscapeGraphComponent.html":{},"injectables/DataStorageService.html":{},"interfaces/Element.html":{},"interfaces/Forms.html":{},"components/HeaderComponent.html":{},"classes/LexicalEntry.html":{},"injectables/NodeService.html":{},"interfaces/Pos.html":{},"interfaces/Sense.html":{},"components/TreeComponent.html":{},"interfaces/TreeNodeCustom.html":{},"components/ViewportComponent.html":{}}}],["informazioni",{"_index":206,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AddNodoService.html":{},"injectables/DataStorageService.html":{},"injectables/NodeService.html":{}},"body":{"injectables/AddNodoService.html":{},"injectables/DataStorageService.html":{},"injectables/NodeService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AddNodoService.html":{},"injectables/DataStorageService.html":{},"injectables/NodeService.html":{},"overview.html":{}}}],["input",{"_index":238,"title":{},"body":{"components/CytoscapeGraphComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["input()text",{"_index":628,"title":{},"body":{"components/TreeComponent.html":{}}}],["inputs",{"_index":186,"title":{},"body":{"components/CytoscapeGraphComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["inputswitchmodule",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["inputtextmodule",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["interface",{"_index":420,"title":{"interfaces/Element.html":{},"interfaces/Forms.html":{},"interfaces/Pos.html":{},"interfaces/Sense.html":{},"interfaces/TreeNodeCustom.html":{}},"body":{"interfaces/Element.html":{},"interfaces/Forms.html":{},"interfaces/Pos.html":{},"interfaces/Sense.html":{},"interfaces/TreeNodeCustom.html":{},"coverage.html":{}}}],["interfaces",{"_index":421,"title":{},"body":{"interfaces/Element.html":{},"interfaces/Forms.html":{},"interfaces/Pos.html":{},"interfaces/Sense.html":{},"interfaces/TreeNodeCustom.html":{},"overview.html":{}}}],["inviare",{"_index":531,"title":{},"body":{"components/TreeComponent.html":{}}}],["invionodoform",{"_index":511,"title":{},"body":{"components/TreeComponent.html":{}}}],["invionodoparent",{"_index":512,"title":{},"body":{"components/TreeComponent.html":{}}}],["invionodosense",{"_index":513,"title":{},"body":{"components/TreeComponent.html":{}}}],["inviototalcount",{"_index":514,"title":{},"body":{"components/TreeComponent.html":{}}}],["ischecked",{"_index":179,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["isleaf",{"_index":674,"title":{},"body":{"components/TreeComponent.html":{}}}],["isloading",{"_index":493,"title":{},"body":{"components/TreeComponent.html":{}}}],["istanzacycomponent",{"_index":749,"title":{},"body":{"components/ViewportComponent.html":{}}}],["join",{"_index":641,"title":{},"body":{"components/TreeComponent.html":{}}}],["karma",{"_index":934,"title":{},"body":{"index.html":{}}}],["l'id",{"_index":218,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["la",{"_index":663,"title":{},"body":{"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["label",{"_index":17,"title":{},"body":{"injectables/AddNodoService.html":{},"components/CytoscapeGraphComponent.html":{},"interfaces/Element.html":{},"interfaces/Forms.html":{},"classes/LexicalEntry.html":{},"injectables/NodeService.html":{},"interfaces/Pos.html":{},"interfaces/Sense.html":{},"components/TreeComponent.html":{}}}],["label/id",{"_index":231,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["labelorid",{"_index":183,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["labelorid(event",{"_index":210,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["lang",{"_index":383,"title":{},"body":{"injectables/DataStorageService.html":{},"components/TreeComponent.html":{}}}],["language",{"_index":454,"title":{},"body":{"classes/LexicalEntry.html":{}}}],["larghezza",{"_index":778,"title":{},"body":{"components/ViewportComponent.html":{}}}],["lastupdate",{"_index":433,"title":{},"body":{"interfaces/Forms.html":{},"classes/LexicalEntry.html":{},"interfaces/Sense.html":{}}}],["lateralcolumn",{"_index":829,"title":{},"body":{"components/ViewportComponent.html":{}}}],["layout",{"_index":825,"title":{},"body":{"components/ViewportComponent.html":{}}}],["leaf",{"_index":472,"title":{},"body":{"injectables/NodeService.html":{},"components/TreeComponent.html":{}}}],["legend",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/CytoscapeGraphComponent.html":{},"components/HeaderComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["lemma",{"_index":480,"title":{},"body":{"interfaces/Sense.html":{}}}],["lessicale",{"_index":373,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["lessicali",{"_index":391,"title":{},"body":{"injectables/DataStorageService.html":{},"components/TreeComponent.html":{}}}],["lexentrylist",{"_index":463,"title":{},"body":{"injectables/NodeService.html":{}}}],["lexentrylist.list.foreach(lexicallist",{"_index":466,"title":{},"body":{"injectables/NodeService.html":{}}}],["lexical",{"_index":537,"title":{},"body":{"components/TreeComponent.html":{}}}],["lexicalentry",{"_index":402,"title":{"classes/LexicalEntry.html":{}},"body":{"injectables/DataStorageService.html":{},"interfaces/Forms.html":{},"classes/LexicalEntry.html":{},"injectables/NodeService.html":{},"interfaces/Sense.html":{},"components/TreeComponent.html":{},"interfaces/TreeNodeCustom.html":{},"coverage.html":{}}}],["lexicalentry.list",{"_index":716,"title":{},"body":{"components/TreeComponent.html":{}}}],["lexicalentry.model",{"_index":739,"title":{},"body":{"interfaces/TreeNodeCustom.html":{}}}],["lexicalentry.totalhits",{"_index":720,"title":{},"body":{"components/TreeComponent.html":{}}}],["lexicalentryinstancename",{"_index":434,"title":{},"body":{"interfaces/Forms.html":{},"classes/LexicalEntry.html":{},"interfaces/Sense.html":{},"interfaces/TreeNodeCustom.html":{}}}],["lexicallist.label",{"_index":468,"title":{},"body":{"injectables/NodeService.html":{}}}],["lexicallist.lexicalentryinstancename",{"_index":469,"title":{},"body":{"injectables/NodeService.html":{}}}],["lexicallist.pos",{"_index":471,"title":{},"body":{"injectables/NodeService.html":{}}}],["lexicon",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["lexo",{"_index":409,"title":{},"body":{"injectables/DataStorageService.html":{},"components/HeaderComponent.html":{}}}],["limit",{"_index":387,"title":{},"body":{"injectables/DataStorageService.html":{},"components/TreeComponent.html":{}}}],["list",{"_index":449,"title":{},"body":{"classes/LexicalEntry.html":{}}}],["lista",{"_index":389,"title":{},"body":{"injectables/DataStorageService.html":{},"components/TreeComponent.html":{}}}],["literal",{"_index":424,"title":{},"body":{"interfaces/Element.html":{},"interfaces/Forms.html":{},"classes/LexicalEntry.html":{},"miscellaneous/variables.html":{}}}],["localstorage.clear",{"_index":250,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["main",{"_index":824,"title":{},"body":{"components/ViewportComponent.html":{}}}],["margin",{"_index":835,"title":{},"body":{"components/ViewportComponent.html":{}}}],["matching",{"_index":42,"title":{},"body":{"injectables/AddNodoService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoscapeGraphComponent.html":{},"injectables/DataStorageService.html":{},"interfaces/Element.html":{},"interfaces/Forms.html":{},"components/HeaderComponent.html":{},"classes/LexicalEntry.html":{},"injectables/NodeService.html":{},"interfaces/Pos.html":{},"interfaces/Sense.html":{},"components/TreeComponent.html":{},"interfaces/TreeNodeCustom.html":{},"components/ViewportComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maxzoom",{"_index":256,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["mediaqueries/mediaquery.scss",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/CytoscapeGraphComponent.html":{},"components/ViewportComponent.html":{}}}],["metadata",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/CytoscapeGraphComponent.html":{},"components/HeaderComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["methods",{"_index":10,"title":{},"body":{"injectables/AddNodoService.html":{},"components/CytoscapeGraphComponent.html":{},"injectables/DataStorageService.html":{},"components/HeaderComponent.html":{},"injectables/NodeService.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["metodo",{"_index":551,"title":{},"body":{"components/TreeComponent.html":{}}}],["min",{"_index":840,"title":{},"body":{"components/ViewportComponent.html":{}}}],["minore",{"_index":779,"title":{},"body":{"components/ViewportComponent.html":{}}}],["minzoom",{"_index":254,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["miscellaneous",{"_index":959,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["models/element.model",{"_index":400,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["models/forms.model",{"_index":401,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["models/lexicalentry.model",{"_index":403,"title":{},"body":{"injectables/DataStorageService.html":{},"injectables/NodeService.html":{}}}],["models/pos.model",{"_index":404,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["models/sense.model",{"_index":406,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["models/tree",{"_index":464,"title":{},"body":{"injectables/NodeService.html":{}}}],["module",{"_index":98,"title":{"modules/AppModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":100,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["more",{"_index":947,"title":{},"body":{"index.html":{}}}],["morphology",{"_index":435,"title":{},"body":{"interfaces/Forms.html":{},"classes/LexicalEntry.html":{},"components/TreeComponent.html":{}}}],["mouse",{"_index":697,"title":{},"body":{"components/TreeComponent.html":{}}}],["mousedown",{"_index":502,"title":{},"body":{"components/TreeComponent.html":{}}}],["mousedown(target",{"_index":560,"title":{},"body":{"components/TreeComponent.html":{}}}],["name",{"_index":24,"title":{},"body":{"injectables/AddNodoService.html":{},"components/AppComponent.html":{},"components/CytoscapeGraphComponent.html":{},"injectables/DataStorageService.html":{},"components/HeaderComponent.html":{},"injectables/NodeService.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{},"index.html":{}}}],["navigate",{"_index":912,"title":{},"body":{"index.html":{}}}],["need",{"_index":940,"title":{},"body":{"index.html":{}}}],["nel",{"_index":223,"title":{},"body":{"components/CytoscapeGraphComponent.html":{},"components/TreeComponent.html":{}}}],["nell'alberatura",{"_index":635,"title":{},"body":{"components/TreeComponent.html":{}}}],["nella",{"_index":541,"title":{},"body":{"components/TreeComponent.html":{}}}],["new",{"_index":629,"title":{},"body":{"components/TreeComponent.html":{},"components/ViewportComponent.html":{},"coverage.html":{},"index.html":{}}}],["newentry",{"_index":467,"title":{},"body":{"injectables/NodeService.html":{}}}],["ng",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["ngbmodule",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodule",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["ngondestroy",{"_index":503,"title":{},"body":{"components/TreeComponent.html":{}}}],["ngoninit",{"_index":184,"title":{},"body":{"components/CytoscapeGraphComponent.html":{},"components/HeaderComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["node",{"_index":240,"title":{},"body":{"components/CytoscapeGraphComponent.html":{},"injectables/NodeService.html":{},"components/TreeComponent.html":{},"interfaces/TreeNodeCustom.html":{},"components/ViewportComponent.html":{},"coverage.html":{}}}],["node.count",{"_index":727,"title":{},"body":{"components/TreeComponent.html":{}}}],["node.label",{"_index":725,"title":{},"body":{"components/TreeComponent.html":{}}}],["node.morphology",{"_index":728,"title":{},"body":{"components/TreeComponent.html":{}}}],["node.pos",{"_index":726,"title":{},"body":{"components/TreeComponent.html":{}}}],["nodeexpand",{"_index":504,"title":{},"body":{"components/TreeComponent.html":{}}}],["nodeexpand(event",{"_index":577,"title":{},"body":{"components/TreeComponent.html":{}}}],["nodes",{"_index":38,"title":{},"body":{"injectables/AddNodoService.html":{}}}],["nodeservice",{"_index":457,"title":{"injectables/NodeService.html":{}},"body":{"injectables/NodeService.html":{},"components/TreeComponent.html":{},"coverage.html":{}}}],["nodi",{"_index":768,"title":{},"body":{"components/ViewportComponent.html":{}}}],["nodo",{"_index":203,"title":{},"body":{"components/CytoscapeGraphComponent.html":{},"components/TreeComponent.html":{}}}],["nodo.service",{"_index":243,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["nodo.service.ts",{"_index":8,"title":{},"body":{"injectables/AddNodoService.html":{},"coverage.html":{}}}],["nodo.service.ts:10",{"_index":21,"title":{},"body":{"injectables/AddNodoService.html":{}}}],["nodo.service.ts:6",{"_index":14,"title":{},"body":{"injectables/AddNodoService.html":{}}}],["nodoformfromsidebar",{"_index":751,"title":{},"body":{"components/ViewportComponent.html":{}}}],["nodoformfromsidebar($event",{"_index":764,"title":{},"body":{"components/ViewportComponent.html":{}}}],["nodoparentfromsidebar",{"_index":752,"title":{},"body":{"components/ViewportComponent.html":{}}}],["nodoparentfromsidebar($event",{"_index":766,"title":{},"body":{"components/ViewportComponent.html":{}}}],["nodosensefromsidebar",{"_index":753,"title":{},"body":{"components/ViewportComponent.html":{}}}],["nodosensefromsidebar($event",{"_index":772,"title":{},"body":{"components/ViewportComponent.html":{}}}],["non",{"_index":666,"title":{},"body":{"components/TreeComponent.html":{}}}],["none",{"_index":339,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["note",{"_index":436,"title":{},"body":{"interfaces/Forms.html":{},"classes/LexicalEntry.html":{},"interfaces/Sense.html":{}}}],["number",{"_index":386,"title":{},"body":{"injectables/DataStorageService.html":{},"interfaces/Element.html":{},"interfaces/Forms.html":{},"classes/LexicalEntry.html":{},"interfaces/Pos.html":{},"interfaces/Sense.html":{},"components/TreeComponent.html":{},"interfaces/TreeNodeCustom.html":{},"components/ViewportComponent.html":{}}}],["o",{"_index":219,"title":{},"body":{"components/CytoscapeGraphComponent.html":{},"components/TreeComponent.html":{}}}],["object",{"_index":966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":375,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["offset",{"_index":385,"title":{},"body":{"injectables/DataStorageService.html":{},"components/TreeComponent.html":{}}}],["oggetto",{"_index":566,"title":{},"body":{"components/TreeComponent.html":{}}}],["onchanges",{"_index":611,"title":{},"body":{"components/TreeComponent.html":{}}}],["ondestroy",{"_index":486,"title":{},"body":{"components/TreeComponent.html":{}}}],["ondragstart",{"_index":505,"title":{},"body":{"components/TreeComponent.html":{}}}],["ondragstart(event",{"_index":581,"title":{},"body":{"components/TreeComponent.html":{}}}],["oninit",{"_index":175,"title":{},"body":{"components/CytoscapeGraphComponent.html":{},"components/HeaderComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["onresized",{"_index":754,"title":{},"body":{"components/ViewportComponent.html":{}}}],["onresized(event",{"_index":774,"title":{},"body":{"components/ViewportComponent.html":{}}}],["onscroll",{"_index":506,"title":{},"body":{"components/TreeComponent.html":{}}}],["onscroll($event",{"_index":583,"title":{},"body":{"components/TreeComponent.html":{}}}],["optional",{"_index":25,"title":{},"body":{"injectables/AddNodoService.html":{},"components/CytoscapeGraphComponent.html":{},"injectables/DataStorageService.html":{},"injectables/NodeService.html":{},"components/TreeComponent.html":{},"interfaces/TreeNodeCustom.html":{},"components/ViewportComponent.html":{}}}],["out",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":612,"title":{},"body":{"components/TreeComponent.html":{}}}],["outputs",{"_index":510,"title":{},"body":{"components/TreeComponent.html":{}}}],["over",{"_index":698,"title":{},"body":{"components/TreeComponent.html":{}}}],["overflow",{"_index":730,"title":{},"body":{"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["overview",{"_index":950,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":869,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":350,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["page",{"_index":952,"title":{},"body":{"index.html":{}}}],["param",{"_index":303,"title":{},"body":{"components/CytoscapeGraphComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["parameters",{"_index":22,"title":{},"body":{"injectables/AddNodoService.html":{},"components/CytoscapeGraphComponent.html":{},"injectables/DataStorageService.html":{},"injectables/NodeService.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["parametro",{"_index":660,"title":{},"body":{"components/TreeComponent.html":{}}}],["parent",{"_index":532,"title":{},"body":{"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["parentlevel",{"_index":470,"title":{},"body":{"injectables/NodeService.html":{},"components/TreeComponent.html":{}}}],["parentnode",{"_index":188,"title":{},"body":{"components/CytoscapeGraphComponent.html":{},"components/TreeComponent.html":{}}}],["parentnodeelements",{"_index":180,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["parentreceived",{"_index":757,"title":{},"body":{"components/ViewportComponent.html":{}}}],["parentreceived:treenodecustom",{"_index":805,"title":{},"body":{"components/ViewportComponent.html":{}}}],["per",{"_index":215,"title":{},"body":{"components/CytoscapeGraphComponent.html":{},"injectables/DataStorageService.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["phoneticrep",{"_index":437,"title":{},"body":{"interfaces/Forms.html":{}}}],["placement",{"_index":297,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["platform",{"_index":937,"title":{},"body":{"index.html":{}}}],["pointer",{"_index":352,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["popper",{"_index":246,"title":{},"body":{"components/CytoscapeGraphComponent.html":{},"dependencies.html":{}}}],["popper{background",{"_index":283,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["pos",{"_index":18,"title":{"interfaces/Pos.html":{}},"body":{"injectables/AddNodoService.html":{},"components/CytoscapeGraphComponent.html":{},"injectables/DataStorageService.html":{},"classes/LexicalEntry.html":{},"injectables/NodeService.html":{},"interfaces/Pos.html":{},"interfaces/Sense.html":{},"components/TreeComponent.html":{},"interfaces/TreeNodeCustom.html":{},"coverage.html":{}}}],["primeicons",{"_index":890,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":892,"title":{},"body":{"dependencies.html":{}}}],["primeng/api",{"_index":738,"title":{},"body":{"interfaces/TreeNodeCustom.html":{}}}],["primeng/button",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/divider",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/dragdrop",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/dropdown",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/inputswitch",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/inputtext",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/progressspinner",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/radiobutton",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/scroller",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/scrollpanel",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/sidebar",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/splitter",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/tabview",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/tooltip",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/tree",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["private",{"_index":249,"title":{},"body":{"components/CytoscapeGraphComponent.html":{},"components/TreeComponent.html":{}}}],["privato",{"_index":681,"title":{},"body":{"components/TreeComponent.html":{}}}],["production",{"_index":967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["progressspinnermodule",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["project",{"_index":902,"title":{},"body":{"index.html":{}}}],["properties",{"_index":58,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/CytoscapeGraphComponent.html":{},"interfaces/Element.html":{},"interfaces/Forms.html":{},"classes/LexicalEntry.html":{},"interfaces/Pos.html":{},"interfaces/Sense.html":{},"components/TreeComponent.html":{},"interfaces/TreeNodeCustom.html":{},"components/ViewportComponent.html":{},"properties.html":{}}}],["providedin",{"_index":32,"title":{},"body":{"injectables/AddNodoService.html":{},"injectables/DataStorageService.html":{},"injectables/NodeService.html":{}}}],["providers",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["radiobuttonmodule",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["radius",{"_index":290,"title":{},"body":{"components/CytoscapeGraphComponent.html":{},"components/ViewportComponent.html":{}}}],["reactiveformsmodule",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["recuperate",{"_index":207,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["recupero",{"_index":370,"title":{},"body":{"injectables/DataStorageService.html":{},"components/TreeComponent.html":{}}}],["red",{"_index":345,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["reference",{"_index":951,"title":{},"body":{"index.html":{}}}],["relativi",{"_index":569,"title":{},"body":{"components/TreeComponent.html":{}}}],["reload",{"_index":915,"title":{},"body":{"index.html":{}}}],["renderedposition",{"_index":40,"title":{},"body":{"injectables/AddNodoService.html":{}}}],["require",{"_index":866,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resetgraph",{"_index":755,"title":{},"body":{"components/ViewportComponent.html":{}}}],["resetgraph($event",{"_index":789,"title":{},"body":{"components/ViewportComponent.html":{}}}],["resetta",{"_index":228,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["resettare",{"_index":813,"title":{},"body":{"components/ViewportComponent.html":{}}}],["resetview",{"_index":185,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["resizable",{"_index":837,"title":{},"body":{"components/ViewportComponent.html":{}}}],["resize",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"components/ViewportComponent.html":{},"dependencies.html":{}}}],["resizedevent",{"_index":775,"title":{},"body":{"components/ViewportComponent.html":{}}}],["restituisce",{"_index":553,"title":{},"body":{"components/TreeComponent.html":{}}}],["result",{"_index":465,"title":{},"body":{"injectables/NodeService.html":{}}}],["result.push(newentry",{"_index":474,"title":{},"body":{"injectables/NodeService.html":{}}}],["results",{"_index":41,"title":{},"body":{"injectables/AddNodoService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoscapeGraphComponent.html":{},"injectables/DataStorageService.html":{},"interfaces/Element.html":{},"interfaces/Forms.html":{},"components/HeaderComponent.html":{},"classes/LexicalEntry.html":{},"injectables/NodeService.html":{},"interfaces/Pos.html":{},"interfaces/Sense.html":{},"components/TreeComponent.html":{},"interfaces/TreeNodeCustom.html":{},"components/ViewportComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retrievesenses",{"_index":507,"title":{},"body":{"components/TreeComponent.html":{}}}],["return",{"_index":296,"title":{},"body":{"components/CytoscapeGraphComponent.html":{},"injectables/DataStorageService.html":{},"injectables/NodeService.html":{},"components/TreeComponent.html":{}}}],["returns",{"_index":28,"title":{},"body":{"injectables/AddNodoService.html":{},"components/CytoscapeGraphComponent.html":{},"injectables/DataStorageService.html":{},"components/HeaderComponent.html":{},"injectables/NodeService.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["revisiondate",{"_index":456,"title":{},"body":{"classes/LexicalEntry.html":{}}}],["revisor",{"_index":453,"title":{},"body":{"classes/LexicalEntry.html":{}}}],["ricerca",{"_index":523,"title":{},"body":{"components/TreeComponent.html":{}}}],["ricevuti",{"_index":769,"title":{},"body":{"components/ViewportComponent.html":{}}}],["ricevuto",{"_index":810,"title":{},"body":{"components/ViewportComponent.html":{}}}],["root",{"_index":33,"title":{},"body":{"injectables/AddNodoService.html":{},"components/AppComponent.html":{},"injectables/DataStorageService.html":{},"injectables/NodeService.html":{}}}],["root'},{'name",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/CytoscapeGraphComponent.html":{},"components/HeaderComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["row",{"_index":828,"title":{},"body":{"components/ViewportComponent.html":{}}}],["run",{"_index":909,"title":{},"body":{"index.html":{}}}],["running",{"_index":928,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":399,"title":{},"body":{"injectables/DataStorageService.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":615,"title":{},"body":{"components/TreeComponent.html":{}}}],["salvo",{"_index":659,"title":{},"body":{"components/TreeComponent.html":{}}}],["sar",{"_index":571,"title":{},"body":{"components/TreeComponent.html":{}}}],["scaffolding",{"_index":919,"title":{},"body":{"index.html":{}}}],["schermo",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/CytoscapeGraphComponent.html":{},"components/ViewportComponent.html":{}}}],["scroll",{"_index":516,"title":{},"body":{"components/TreeComponent.html":{}}}],["scroll($event",{"_index":544,"title":{},"body":{"components/TreeComponent.html":{}}}],["scrollermodule",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["scrollheight",{"_index":494,"title":{},"body":{"components/TreeComponent.html":{}}}],["scrollpanelmodule",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["scrolltotop",{"_index":495,"title":{},"body":{"components/TreeComponent.html":{}}}],["se",{"_index":662,"title":{},"body":{"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["search",{"_index":395,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["searchmode",{"_index":380,"title":{},"body":{"injectables/DataStorageService.html":{},"components/TreeComponent.html":{}}}],["selector",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/CytoscapeGraphComponent.html":{},"components/HeaderComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["sense",{"_index":405,"title":{"interfaces/Sense.html":{}},"body":{"injectables/DataStorageService.html":{},"interfaces/Sense.html":{},"components/TreeComponent.html":{},"coverage.html":{}}}],["sense(childs2level",{"_index":564,"title":{},"body":{"components/TreeComponent.html":{}}}],["sensechild",{"_index":692,"title":{},"body":{"components/TreeComponent.html":{}}}],["senseexample",{"_index":481,"title":{},"body":{"interfaces/Sense.html":{}}}],["senseinstancename",{"_index":482,"title":{},"body":{"interfaces/Sense.html":{},"components/TreeComponent.html":{},"interfaces/TreeNodeCustom.html":{}}}],["sensenode",{"_index":189,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["sensenodeelements",{"_index":181,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["sensereceived",{"_index":758,"title":{},"body":{"components/ViewportComponent.html":{}}}],["senses",{"_index":398,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["senses?key=lexodemo",{"_index":417,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["sensesfromlexo",{"_index":508,"title":{},"body":{"components/TreeComponent.html":{}}}],["sensetranslation",{"_index":483,"title":{},"body":{"interfaces/Sense.html":{}}}],["sensi",{"_index":686,"title":{},"body":{"components/TreeComponent.html":{}}}],["senso",{"_index":665,"title":{},"body":{"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["serve",{"_index":910,"title":{},"body":{"index.html":{}}}],["server",{"_index":908,"title":{},"body":{"index.html":{}}}],["servizi/add",{"_index":242,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["servizio",{"_index":369,"title":{},"body":{"injectables/DataStorageService.html":{},"components/ViewportComponent.html":{}}}],["shared/data",{"_index":616,"title":{},"body":{"components/TreeComponent.html":{}}}],["shared/models/tree",{"_index":239,"title":{},"body":{"components/CytoscapeGraphComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["shared/servizi/node.service",{"_index":618,"title":{},"body":{"components/TreeComponent.html":{}}}],["showf",{"_index":509,"title":{},"body":{"components/TreeComponent.html":{}}}],["showhidemorphtraits",{"_index":496,"title":{},"body":{"components/TreeComponent.html":{}}}],["si",{"_index":673,"title":{},"body":{"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["sidebar",{"_index":542,"title":{},"body":{"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["sidebar'},{'name",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/CytoscapeGraphComponent.html":{},"components/HeaderComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["sidebar/sidebar.component",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["sidebarcomponent",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoscapeGraphComponent.html":{},"components/HeaderComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sidebarmodule",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["simplechanges",{"_index":613,"title":{},"body":{"components/TreeComponent.html":{}}}],["size:small;padding:10px",{"_index":292,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["solid",{"_index":288,"title":{},"body":{"components/CytoscapeGraphComponent.html":{},"components/ViewportComponent.html":{},"dependencies.html":{}}}],["sopra",{"_index":699,"title":{},"body":{"components/TreeComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AddNodoService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoscapeGraphComponent.html":{},"injectables/DataStorageService.html":{},"interfaces/Element.html":{},"interfaces/Forms.html":{},"components/HeaderComponent.html":{},"classes/LexicalEntry.html":{},"injectables/NodeService.html":{},"interfaces/Pos.html":{},"interfaces/Sense.html":{},"components/TreeComponent.html":{},"interfaces/TreeNodeCustom.html":{},"components/ViewportComponent.html":{},"index.html":{}}}],["spec\\.ts",{"_index":965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["splittermodule",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["src/.../environment.prod.ts",{"_index":962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:8",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/cytoscape",{"_index":6,"title":{},"body":{"injectables/AddNodoService.html":{},"components/CytoscapeGraphComponent.html":{},"coverage.html":{}}}],["src/app/header/header.component.ts",{"_index":441,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/header/header.component.ts:12",{"_index":445,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:8",{"_index":444,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/data",{"_index":355,"title":{},"body":{"injectables/DataStorageService.html":{},"coverage.html":{}}}],["src/app/shared/models/element.model.ts",{"_index":422,"title":{},"body":{"interfaces/Element.html":{},"coverage.html":{}}}],["src/app/shared/models/forms.model.ts",{"_index":427,"title":{},"body":{"interfaces/Forms.html":{},"coverage.html":{}}}],["src/app/shared/models/lexicalentry.model.ts",{"_index":448,"title":{},"body":{"classes/LexicalEntry.html":{},"coverage.html":{}}}],["src/app/shared/models/lexicalentry.model.ts:2",{"_index":452,"title":{},"body":{"classes/LexicalEntry.html":{}}}],["src/app/shared/models/lexicalentry.model.ts:3",{"_index":451,"title":{},"body":{"classes/LexicalEntry.html":{}}}],["src/app/shared/models/pos.model.ts",{"_index":475,"title":{},"body":{"interfaces/Pos.html":{},"coverage.html":{}}}],["src/app/shared/models/sense.model.ts",{"_index":476,"title":{},"body":{"interfaces/Sense.html":{},"coverage.html":{}}}],["src/app/shared/models/tree",{"_index":734,"title":{},"body":{"interfaces/TreeNodeCustom.html":{},"coverage.html":{}}}],["src/app/shared/servizi/node.service.ts",{"_index":458,"title":{},"body":{"injectables/NodeService.html":{},"coverage.html":{}}}],["src/app/shared/servizi/node.service.ts:12",{"_index":462,"title":{},"body":{"injectables/NodeService.html":{}}}],["src/app/shared/servizi/node.service.ts:8",{"_index":460,"title":{},"body":{"injectables/NodeService.html":{}}}],["src/app/sidebar/sidebar.component.ts",{"_index":854,"title":{},"body":{"coverage.html":{}}}],["src/app/tree/tree.component.ts",{"_index":485,"title":{},"body":{"components/TreeComponent.html":{},"coverage.html":{}}}],["src/app/tree/tree.component.ts:121",{"_index":559,"title":{},"body":{"components/TreeComponent.html":{}}}],["src/app/tree/tree.component.ts:143",{"_index":578,"title":{},"body":{"components/TreeComponent.html":{}}}],["src/app/tree/tree.component.ts:17",{"_index":545,"title":{},"body":{"components/TreeComponent.html":{}}}],["src/app/tree/tree.component.ts:208",{"_index":561,"title":{},"body":{"components/TreeComponent.html":{}}}],["src/app/tree/tree.component.ts:213",{"_index":582,"title":{},"body":{"components/TreeComponent.html":{}}}],["src/app/tree/tree.component.ts:237",{"_index":586,"title":{},"body":{"components/TreeComponent.html":{}}}],["src/app/tree/tree.component.ts:256",{"_index":573,"title":{},"body":{"components/TreeComponent.html":{}}}],["src/app/tree/tree.component.ts:29",{"_index":600,"title":{},"body":{"components/TreeComponent.html":{}}}],["src/app/tree/tree.component.ts:34",{"_index":606,"title":{},"body":{"components/TreeComponent.html":{}}}],["src/app/tree/tree.component.ts:40",{"_index":524,"title":{},"body":{"components/TreeComponent.html":{}}}],["src/app/tree/tree.component.ts:41",{"_index":602,"title":{},"body":{"components/TreeComponent.html":{}}}],["src/app/tree/tree.component.ts:42",{"_index":608,"title":{},"body":{"components/TreeComponent.html":{}}}],["src/app/tree/tree.component.ts:43",{"_index":519,"title":{},"body":{"components/TreeComponent.html":{}}}],["src/app/tree/tree.component.ts:44",{"_index":594,"title":{},"body":{"components/TreeComponent.html":{}}}],["src/app/tree/tree.component.ts:45",{"_index":587,"title":{},"body":{"components/TreeComponent.html":{}}}],["src/app/tree/tree.component.ts:46",{"_index":596,"title":{},"body":{"components/TreeComponent.html":{}}}],["src/app/tree/tree.component.ts:47",{"_index":604,"title":{},"body":{"components/TreeComponent.html":{}}}],["src/app/tree/tree.component.ts:48",{"_index":599,"title":{},"body":{"components/TreeComponent.html":{}}}],["src/app/tree/tree.component.ts:49",{"_index":598,"title":{},"body":{"components/TreeComponent.html":{}}}],["src/app/tree/tree.component.ts:50",{"_index":607,"title":{},"body":{"components/TreeComponent.html":{}}}],["src/app/tree/tree.component.ts:55",{"_index":534,"title":{},"body":{"components/TreeComponent.html":{}}}],["src/app/tree/tree.component.ts:60",{"_index":521,"title":{},"body":{"components/TreeComponent.html":{}}}],["src/app/tree/tree.component.ts:62",{"_index":520,"title":{},"body":{"components/TreeComponent.html":{}}}],["src/app/tree/tree.component.ts:64",{"_index":609,"title":{},"body":{"components/TreeComponent.html":{}}}],["src/app/tree/tree.component.ts:65",{"_index":588,"title":{},"body":{"components/TreeComponent.html":{}}}],["src/app/tree/tree.component.ts:67",{"_index":595,"title":{},"body":{"components/TreeComponent.html":{}}}],["src/app/tree/tree.component.ts:69",{"_index":592,"title":{},"body":{"components/TreeComponent.html":{}}}],["src/app/tree/tree.component.ts:70",{"_index":593,"title":{},"body":{"components/TreeComponent.html":{}}}],["src/app/tree/tree.component.ts:71",{"_index":590,"title":{},"body":{"components/TreeComponent.html":{}}}],["src/app/tree/tree.component.ts:75",{"_index":529,"title":{},"body":{"components/TreeComponent.html":{}}}],["src/app/tree/tree.component.ts:76",{"_index":528,"title":{},"body":{"components/TreeComponent.html":{}}}],["src/app/tree/tree.component.ts:77",{"_index":533,"title":{},"body":{"components/TreeComponent.html":{}}}],["src/app/tree/tree.component.ts:79",{"_index":603,"title":{},"body":{"components/TreeComponent.html":{}}}],["src/app/tree/tree.component.ts:81",{"_index":518,"title":{},"body":{"components/TreeComponent.html":{}}}],["src/app/tree/tree.component.ts:87",{"_index":576,"title":{},"body":{"components/TreeComponent.html":{}}}],["src/app/tree/tree.component.ts:98",{"_index":550,"title":{},"body":{"components/TreeComponent.html":{}}}],["src/app/viewport/viewport.component.ts",{"_index":744,"title":{},"body":{"components/ViewportComponent.html":{},"coverage.html":{}}}],["src/app/viewport/viewport.component.ts:13",{"_index":759,"title":{},"body":{"components/ViewportComponent.html":{}}}],["src/app/viewport/viewport.component.ts:15",{"_index":797,"title":{},"body":{"components/ViewportComponent.html":{}}}],["src/app/viewport/viewport.component.ts:16",{"_index":761,"title":{},"body":{"components/ViewportComponent.html":{}}}],["src/app/viewport/viewport.component.ts:17",{"_index":762,"title":{},"body":{"components/ViewportComponent.html":{}}}],["src/app/viewport/viewport.component.ts:18",{"_index":760,"title":{},"body":{"components/ViewportComponent.html":{}}}],["src/app/viewport/viewport.component.ts:20",{"_index":792,"title":{},"body":{"components/ViewportComponent.html":{}}}],["src/app/viewport/viewport.component.ts:21",{"_index":793,"title":{},"body":{"components/ViewportComponent.html":{}}}],["src/app/viewport/viewport.component.ts:23",{"_index":798,"title":{},"body":{"components/ViewportComponent.html":{}}}],["src/app/viewport/viewport.component.ts:24",{"_index":794,"title":{},"body":{"components/ViewportComponent.html":{}}}],["src/app/viewport/viewport.component.ts:25",{"_index":763,"title":{},"body":{"components/ViewportComponent.html":{}}}],["src/app/viewport/viewport.component.ts:32",{"_index":767,"title":{},"body":{"components/ViewportComponent.html":{}}}],["src/app/viewport/viewport.component.ts:36",{"_index":773,"title":{},"body":{"components/ViewportComponent.html":{}}}],["src/app/viewport/viewport.component.ts:40",{"_index":765,"title":{},"body":{"components/ViewportComponent.html":{}}}],["src/app/viewport/viewport.component.ts:44",{"_index":790,"title":{},"body":{"components/ViewportComponent.html":{}}}],["src/app/viewport/viewport.component.ts:56",{"_index":776,"title":{},"body":{"components/ViewportComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":859,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":863,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":864,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":900,"title":{"index.html":{}},"body":{}}],["startswith",{"_index":601,"title":{},"body":{"components/TreeComponent.html":{}}}],["statements",{"_index":845,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":796,"title":{},"body":{"components/ViewportComponent.html":{}}}],["status",{"_index":384,"title":{},"body":{"injectables/DataStorageService.html":{},"classes/LexicalEntry.html":{},"components/TreeComponent.html":{}}}],["stili",{"_index":783,"title":{},"body":{"components/ViewportComponent.html":{}}}],["storage.service",{"_index":617,"title":{},"body":{"components/TreeComponent.html":{}}}],["storage.service.ts",{"_index":357,"title":{},"body":{"injectables/DataStorageService.html":{},"coverage.html":{}}}],["storage.service.ts:13",{"_index":365,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["storage.service.ts:20",{"_index":388,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["storage.service.ts:31",{"_index":368,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["storage.service.ts:38",{"_index":377,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["storage.service.ts:46",{"_index":397,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["storage.service.ts:53",{"_index":393,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["storage/data",{"_index":356,"title":{},"body":{"injectables/DataStorageService.html":{},"components/TreeComponent.html":{},"coverage.html":{}}}],["stored",{"_index":925,"title":{},"body":{"index.html":{}}}],["string",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataStorageService.html":{},"interfaces/Element.html":{},"interfaces/Forms.html":{},"classes/LexicalEntry.html":{},"interfaces/Pos.html":{},"interfaces/Sense.html":{},"components/TreeComponent.html":{},"interfaces/TreeNodeCustom.html":{}}}],["style",{"_index":264,"title":{},"body":{"components/CytoscapeGraphComponent.html":{},"components/ViewportComponent.html":{}}}],["stylecy",{"_index":244,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["stylecy.json",{"_index":245,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["styles",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/CytoscapeGraphComponent.html":{},"components/HeaderComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["styleurls",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/CytoscapeGraphComponent.html":{},"components/HeaderComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["sua",{"_index":770,"title":{},"body":{"components/ViewportComponent.html":{}}}],["sub1",{"_index":497,"title":{},"body":{"components/TreeComponent.html":{}}}],["subject",{"_index":791,"title":{},"body":{"components/ViewportComponent.html":{}}}],["subscription",{"_index":605,"title":{},"body":{"components/TreeComponent.html":{}}}],["subscriptions",{"_index":575,"title":{},"body":{"components/TreeComponent.html":{}}}],["support",{"_index":953,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":880,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["switch",{"_index":214,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["t",{"_index":281,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["table",{"_index":868,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":867,"title":{},"body":{"coverage.html":{}}}],["tabviewmodule",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["take",{"_index":614,"title":{},"body":{"components/TreeComponent.html":{}}}],["target",{"_index":562,"title":{},"body":{"components/TreeComponent.html":{}}}],["targetsense",{"_index":438,"title":{},"body":{"interfaces/Forms.html":{}}}],["targetsenseinstancename",{"_index":439,"title":{},"body":{"interfaces/Forms.html":{}}}],["tempform",{"_index":657,"title":{},"body":{"components/TreeComponent.html":{}}}],["tempform.foreach(el",{"_index":683,"title":{},"body":{"components/TreeComponent.html":{}}}],["template",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/CytoscapeGraphComponent.html":{},"components/HeaderComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["templateurl",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/CytoscapeGraphComponent.html":{},"components/HeaderComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["tempsense",{"_index":658,"title":{},"body":{"components/TreeComponent.html":{}}}],["tempsense.foreach(el",{"_index":689,"title":{},"body":{"components/TreeComponent.html":{}}}],["test",{"_index":931,"title":{},"body":{"index.html":{}}}],["testing",{"_index":943,"title":{},"body":{"index.html":{}}}],["tests",{"_index":930,"title":{},"body":{"index.html":{}}}],["text",{"_index":392,"title":{},"body":{"injectables/DataStorageService.html":{},"components/TreeComponent.html":{}}}],["textureonviewport",{"_index":260,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["this.addelement.addnodo(this.cy",{"_index":309,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["this.addformchildren(idnode",{"_index":682,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.addsensechildren(idnode",{"_index":688,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.author",{"_index":711,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.cy",{"_index":252,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["this.cy.elements().style('display",{"_index":338,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["this.cy.getelementbyid(this.formnode.forminstancename).addclass('border",{"_index":329,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["this.cy.getelementbyid(this.formnode.forminstancename).addclass('form",{"_index":330,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["this.cy.getelementbyid(this.formnode.forminstancename).style('label",{"_index":331,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["this.cy.getelementbyid(this.parentnode.data).addclass('border",{"_index":312,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["this.cy.getelementbyid(this.parentnode.data).addclass('lexicalentry",{"_index":313,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["this.cy.getelementbyid(this.parentnode.data).style('label",{"_index":314,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["this.cy.getelementbyid(this.sensenode.senseinstancename).addclass('border",{"_index":321,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["this.cy.getelementbyid(this.sensenode.senseinstancename).addclass('sense",{"_index":322,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["this.cy.getelementbyid(this.sensenode.senseinstancename).style('label",{"_index":323,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["this.cy.nodes().style('text",{"_index":333,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["this.cy.on('mouseout",{"_index":300,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["this.cy.on('mouseover",{"_index":268,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["this.cy.removelistener('mouseout",{"_index":299,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["this.cy.removelistener('mouseover",{"_index":267,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["this.datastorageservice.fetchelements(idnode).subscribe(el",{"_index":656,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.datastorageservice.fetchforms(idnode).subscribe(el",{"_index":637,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.datastorageservice.fetchlexicalentries(this.text",{"_index":706,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.datastorageservice.fetchsense(idnode).subscribe(el",{"_index":648,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.formnode",{"_index":325,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["this.formnode.forminstancename",{"_index":327,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["this.formnode.label",{"_index":332,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["this.formnode.type",{"_index":328,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["this.formnodeelements.push(this.formnode",{"_index":326,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["this.formreceived",{"_index":809,"title":{},"body":{"components/ViewportComponent.html":{}}}],["this.formtype",{"_index":710,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.height",{"_index":820,"title":{},"body":{"components/ViewportComponent.html":{}}}],["this.http.get('lexo",{"_index":412,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["this.http.post",{"_index":408,"title":{},"body":{"injectables/DataStorageService.html":{}}}],["this.invionodoform.emit(formchid",{"_index":696,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.invionodoparent.emit(parentnode",{"_index":694,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.invionodosense.emit(sensechild",{"_index":695,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.inviototalcount.emit(this.totalcount",{"_index":721,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.ischecked",{"_index":265,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["this.isloading",{"_index":705,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.istanzacycomponent.ischecked",{"_index":817,"title":{},"body":{"components/ViewportComponent.html":{}}}],["this.istanzacycomponent.resetview",{"_index":816,"title":{},"body":{"components/ViewportComponent.html":{}}}],["this.lang",{"_index":712,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.limit",{"_index":722,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.limit).pipe(take(1)).subscribe(lexicalentry",{"_index":715,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.nodeservice.convertfromlexicalsenses(lexicalentry",{"_index":718,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.offset",{"_index":714,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.parentnode",{"_index":307,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["this.parentnode.data",{"_index":310,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["this.parentnode.label",{"_index":315,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["this.parentnode.type",{"_index":311,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["this.parentnodeelements.push(this.parentnode",{"_index":308,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["this.parentreceived",{"_index":807,"title":{},"body":{"components/ViewportComponent.html":{}}}],["this.pos",{"_index":709,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.retrievesenses",{"_index":625,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.scrollheight",{"_index":633,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.searchmode",{"_index":707,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.sensenode",{"_index":316,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["this.sensenode.definition",{"_index":320,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["this.sensenode.label",{"_index":324,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["this.sensenode.senseinstancename",{"_index":318,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["this.sensenode.type",{"_index":319,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["this.sensenodeelements.push(this.sensenode",{"_index":317,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["this.sensereceived",{"_index":808,"title":{},"body":{"components/ViewportComponent.html":{}}}],["this.sensesfromlexo",{"_index":717,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.status",{"_index":713,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.sub1",{"_index":655,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.sub1.unsubscribe",{"_index":724,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.totalcount",{"_index":719,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.type",{"_index":708,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.visualizednode",{"_index":690,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.visualizednode.type",{"_index":693,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.width",{"_index":818,"title":{},"body":{"components/ViewportComponent.html":{}}}],["tipo",{"_index":557,"title":{},"body":{"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["title",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["toggle",{"_index":230,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["tooltipmodule",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["top",{"_index":298,"title":{},"body":{"components/CytoscapeGraphComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["total",{"_index":536,"title":{},"body":{"components/TreeComponent.html":{}}}],["totalcount",{"_index":498,"title":{},"body":{"components/TreeComponent.html":{}}}],["totalhits",{"_index":450,"title":{},"body":{"classes/LexicalEntry.html":{}}}],["trait",{"_index":440,"title":{},"body":{"interfaces/Forms.html":{},"classes/LexicalEntry.html":{}}}],["transition",{"_index":801,"title":{},"body":{"components/ViewportComponent.html":{}}}],["trascinamento",{"_index":701,"title":{},"body":{"components/TreeComponent.html":{}}}],["tree",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/CytoscapeGraphComponent.html":{},"components/HeaderComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["tree'},{'name",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/CytoscapeGraphComponent.html":{},"components/HeaderComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["tree.component.html",{"_index":488,"title":{},"body":{"components/TreeComponent.html":{}}}],["tree.component.scss",{"_index":487,"title":{},"body":{"components/TreeComponent.html":{}}}],["tree/tree.component",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["treecomponent",{"_index":92,"title":{"components/TreeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoscapeGraphComponent.html":{},"components/HeaderComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{},"coverage.html":{},"overview.html":{}}}],["treemodule",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["treenode",{"_index":737,"title":{},"body":{"interfaces/TreeNodeCustom.html":{}}}],["treenodecustom",{"_index":193,"title":{"interfaces/TreeNodeCustom.html":{}},"body":{"components/CytoscapeGraphComponent.html":{},"injectables/NodeService.html":{},"components/TreeComponent.html":{},"interfaces/TreeNodeCustom.html":{},"components/ViewportComponent.html":{},"coverage.html":{}}}],["trigger",{"_index":802,"title":{},"body":{"components/ViewportComponent.html":{}}}],["true",{"_index":259,"title":{},"body":{"components/CytoscapeGraphComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":895,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":19,"title":{},"body":{"injectables/AddNodoService.html":{},"components/AppComponent.html":{},"components/CytoscapeGraphComponent.html":{},"injectables/DataStorageService.html":{},"interfaces/Element.html":{},"interfaces/Forms.html":{},"classes/LexicalEntry.html":{},"injectables/NodeService.html":{},"interfaces/Pos.html":{},"interfaces/Sense.html":{},"components/TreeComponent.html":{},"interfaces/TreeNodeCustom.html":{},"components/ViewportComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type:string",{"_index":742,"title":{},"body":{"interfaces/TreeNodeCustom.html":{}}}],["ulteriori",{"_index":548,"title":{},"body":{"components/TreeComponent.html":{}}}],["una",{"_index":661,"title":{},"body":{"components/TreeComponent.html":{}}}],["undefined",{"_index":654,"title":{},"body":{"components/TreeComponent.html":{},"interfaces/TreeNodeCustom.html":{}}}],["unit",{"_index":929,"title":{},"body":{"index.html":{}}}],["unsubscribe",{"_index":574,"title":{},"body":{"components/TreeComponent.html":{}}}],["usage",{"_index":484,"title":{},"body":{"interfaces/Sense.html":{}}}],["use",{"_index":921,"title":{},"body":{"index.html":{}}}],["valign",{"_index":336,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["valore",{"_index":220,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["value",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/CytoscapeGraphComponent.html":{},"interfaces/Forms.html":{},"classes/LexicalEntry.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/CytoscapeGraphComponent.html":{},"components/HeaderComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["variabile",{"_index":631,"title":{},"body":{"components/TreeComponent.html":{}}}],["variabili",{"_index":525,"title":{},"body":{"components/TreeComponent.html":{}}}],["variable",{"_index":860,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":960,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":905,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":933,"title":{},"body":{"index.html":{}}}],["viene",{"_index":668,"title":{},"body":{"components/TreeComponent.html":{}}}],["view",{"_index":814,"title":{},"body":{"components/ViewportComponent.html":{}}}],["viewchild",{"_index":799,"title":{},"body":{"components/ViewportComponent.html":{}}}],["viewchild(cytoscapegraphcomponent",{"_index":795,"title":{},"body":{"components/ViewportComponent.html":{}}}],["viewport",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/CytoscapeGraphComponent.html":{},"components/HeaderComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["viewport.component.html",{"_index":746,"title":{},"body":{"components/ViewportComponent.html":{}}}],["viewport.component.scss",{"_index":823,"title":{},"body":{"components/ViewportComponent.html":{}}}],["viewport.component.scss','../mediaqueries/mediaquery.scss",{"_index":804,"title":{},"body":{"components/ViewportComponent.html":{}}}],["viewport.component.scss,../mediaqueries/mediaquery.scss",{"_index":745,"title":{},"body":{"components/ViewportComponent.html":{}}}],["viewport/viewport.component",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["viewportcomponent",{"_index":94,"title":{"components/ViewportComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CytoscapeGraphComponent.html":{},"components/HeaderComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{},"coverage.html":{},"overview.html":{}}}],["virtual",{"_index":546,"title":{},"body":{"components/TreeComponent.html":{}}}],["visibile",{"_index":222,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["visualizednode",{"_index":499,"title":{},"body":{"components/TreeComponent.html":{}}}],["visualizzare",{"_index":216,"title":{},"body":{"components/CytoscapeGraphComponent.html":{},"components/TreeComponent.html":{}}}],["visualizzata",{"_index":669,"title":{},"body":{"components/TreeComponent.html":{}}}],["visualizzato",{"_index":572,"title":{},"body":{"components/TreeComponent.html":{}}}],["void",{"_index":29,"title":{},"body":{"injectables/AddNodoService.html":{},"components/CytoscapeGraphComponent.html":{},"components/HeaderComponent.html":{},"components/TreeComponent.html":{},"components/ViewportComponent.html":{}}}],["volta",{"_index":771,"title":{},"body":{"components/ViewportComponent.html":{}}}],["wheelsensitivity",{"_index":262,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["width",{"_index":750,"title":{},"body":{"components/ViewportComponent.html":{}}}],["x",{"_index":279,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["x.appendchild(t",{"_index":293,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}],["y",{"_index":305,"title":{},"body":{"components/CytoscapeGraphComponent.html":{},"components/ViewportComponent.html":{}}}],["yes",{"_index":27,"title":{},"body":{"injectables/AddNodoService.html":{}}}],["z",{"_index":348,"title":{},"body":{"components/CytoscapeGraphComponent.html":{},"components/ViewportComponent.html":{}}}],["zone.js",{"_index":897,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["zoomingenabled",{"_index":258,"title":{},"body":{"components/CytoscapeGraphComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AddNodoService.html":{"url":"injectables/AddNodoService.html","title":"injectable - AddNodoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AddNodoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/cytoscape-graph/servizi/add-nodo.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNodo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/cytoscape-graph/servizi/add-nodo.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addNodo\n                        \n                    \n                \n            \n            \n                \naddNodo(cy, id, label, pos, type, definition?)\n                \n            \n\n\n            \n                \n                    Defined in src/app/cytoscape-graph/servizi/add-nodo.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cy\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    label\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pos\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    definition\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AddNodoService {\n\n  constructor() { }\n\n  addNodo(cy, id, label, pos, type, definition?){\n    cy.add([{\n      group: \"nodes\",\n      data: {\n        id: id,\n        label: label,\n        type: type,\n        definition: definition\n      },\n      renderedPosition: pos,\n    }]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss,mediaqueries/mediaquery.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'app-lexicon-graph'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss','mediaqueries/mediaquery.scss']\n})\nexport class AppComponent {\n  title = 'app-lexicon-graph';\n\n}\n\n    \n\n    \n        \n    \n\n\n\n    \n        \n    \n\n  \n    \n\n    \n                \n                    ./app.component.scss\n                \n                // .header{\n//     height: 5vh;\n// }\n\n.container-fluid{\n    .columns{\n        height: 94.7vh;\n    }\n}\n                \n                    mediaqueries/mediaquery.scss\n                \n                /* BREAKPOINT schermo \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CytoscapeGraphComponent', 'selector': 'app-cytoscape-graph'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'ViewportComponent', 'selector': 'app-viewport'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCytoscapeGraphComponent\n\nCytoscapeGraphComponent\n\nAppModule -->\n\nCytoscapeGraphComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nTreeComponent\n\nTreeComponent\n\nAppModule -->\n\nTreeComponent->AppModule\n\n\n\n\n\nViewportComponent\n\nViewportComponent\n\nAppModule -->\n\nViewportComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            CytoscapeGraphComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            SidebarComponent\n                        \n                        \n                            TreeComponent\n                        \n                        \n                            ViewportComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { FontAwesomeModule, FaIconLibrary } from '@fortawesome/angular-fontawesome';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderComponent } from './header/header.component';\nimport {ButtonModule} from 'primeng/button';\nimport {SidebarModule} from 'primeng/sidebar';\nimport {TreeModule} from 'primeng/tree';\nimport {InputTextModule} from 'primeng/inputtext';\nimport {TabViewModule} from 'primeng/tabview';\nimport {RadioButtonModule} from 'primeng/radiobutton';\nimport {DropdownModule} from 'primeng/dropdown';\nimport {DividerModule} from 'primeng/divider';\nimport {ScrollerModule} from 'primeng/scroller'\nimport {TooltipModule} from 'primeng/tooltip';\nimport {ScrollPanelModule} from 'primeng/scrollpanel';\nimport {DragDropModule} from 'primeng/dragdrop';\nimport {ProgressSpinnerModule} from 'primeng/progressspinner';\nimport {InputSwitchModule} from 'primeng/inputswitch';\nimport {SplitterModule} from 'primeng/splitter';\nimport { AngularResizeEventModule } from 'angular-resize-event';\n\nimport { ViewportComponent } from './viewport/viewport.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CytoscapeGraphComponent } from './cytoscape-graph/cytoscape-graph.component';\nimport { TreeComponent } from './tree/tree.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    ViewportComponent,\n    SidebarComponent,\n    CytoscapeGraphComponent,\n    TreeComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    TreeModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    ButtonModule,\n    SidebarModule,\n    NgbModule,\n    InputTextModule,\n    TabViewModule,\n    RadioButtonModule,\n    DropdownModule,\n    DividerModule,\n    ScrollerModule,\n    FontAwesomeModule,\n    TooltipModule,\n    ScrollPanelModule,\n    DragDropModule,\n    ProgressSpinnerModule,\n    InputSwitchModule,\n    SplitterModule,\n    AngularResizeEventModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule {\n   constructor(library: FaIconLibrary) {\n\n   }\n }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CytoscapeGraphComponent.html":{"url":"components/CytoscapeGraphComponent.html","title":"component - CytoscapeGraphComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CytoscapeGraphComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/cytoscape-graph/cytoscape-graph.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cytoscape-graph\n            \n\n            \n                styleUrls\n                ./cytoscape-graph.component.scss,../mediaqueries/mediaquery.scss\n            \n\n\n\n            \n                templateUrl\n                ./cytoscape-graph.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cy\n                            \n                            \n                                formNodeElements\n                            \n                            \n                                isChecked\n                            \n                            \n                                parentNodeElements\n                            \n                            \n                                senseNodeElements\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                drop\n                            \n                            \n                                labelOrId\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formNode\n                            \n                            \n                                parentNode\n                            \n                            \n                                senseNode\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(addElement: AddNodoService)\n                    \n                \n                        \n                            \n                                Defined in src/app/cytoscape-graph/cytoscape-graph.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        addElement\n                                                  \n                                                        \n                                                                        AddNodoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formNode\n                    \n                \n                \n                    \n                        Type :         TreeNodeCustom\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/cytoscape-graph/cytoscape-graph.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parentNode\n                    \n                \n                \n                    \n                        Type :         TreeNodeCustom\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/cytoscape-graph/cytoscape-graph.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        senseNode\n                    \n                \n                \n                    \n                        Type :         TreeNodeCustom\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/cytoscape-graph/cytoscape-graph.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        drop\n                        \n                    \n                \n            \n            \n                \ndrop(evt)\n                \n            \n\n\n            \n                \n                    Defined in src/app/cytoscape-graph/cytoscape-graph.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    evt\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        drop: aggiungo il nodo in base alle informazioni recuperate dal componente tree\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelOrId\n                        \n                    \n                \n            \n            \n                \nlabelOrId(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/cytoscape-graph/cytoscape-graph.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        checked event dello switch per visualizzare come label l'id o il valore della label visibile nel tree DA COMPLETARE\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/cytoscape-graph/cytoscape-graph.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetView\n                        \n                    \n                \n            \n            \n                \nresetView()\n                \n            \n\n\n            \n                \n                    Defined in src/app/cytoscape-graph/cytoscape-graph.component.ts:118\n                \n            \n\n\n            \n                \n                    resetta il viewport e il toggle label/id\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/cytoscape-graph/cytoscape-graph.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formNodeElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/cytoscape-graph/cytoscape-graph.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isChecked\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/cytoscape-graph/cytoscape-graph.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parentNodeElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/cytoscape-graph/cytoscape-graph.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        senseNodeElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/cytoscape-graph/cytoscape-graph.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport cytoscape from 'cytoscape';\nimport { TreeNodeCustom } from '../shared/models/tree-node-custom.model';\nimport { AddNodoService } from './servizi/add-nodo.service';\nimport styleCy from './styleCy.json'\nimport popper from 'cytoscape-popper';\ncytoscape.use(popper);\n@Component({\n  selector: 'app-cytoscape-graph',\n  templateUrl: './cytoscape-graph.component.html',\n  styleUrls: ['./cytoscape-graph.component.scss', '../mediaqueries/mediaquery.scss']\n})\nexport class CytoscapeGraphComponent implements OnInit {\n  constructor(\n    private addElement: AddNodoService) { }\n  cy: any;\n\n  @Input() parentNode: TreeNodeCustom;\n  @Input() senseNode: TreeNodeCustom;\n  @Input() formNode: TreeNodeCustom;\n\n  parentNodeElements: any = [];\n  senseNodeElements: any = [];\n  formNodeElements: any = [];\n\n  isChecked: boolean;\n  ngOnInit(): void {\n    localStorage.clear();\n    const that = this;\n    this.cy = cytoscape({\n      container: document.getElementById('cy'),\n      minZoom: 0.2,\n      maxZoom: 5.0,\n      zoomingEnabled: true,\n      textureOnViewport: true,\n      hideEdgesOnViewport: true,\n      wheelSensitivity: 0.1,\n      style: styleCy\n    });\n\n    this.isChecked = false;\n    this.cy.removeListener('mouseover', 'node');\n    this.cy.on('mouseover', 'node', (event) => {\n      let contentToRender;\n      if (event.target.data().type === 'childS2L') {\n        contentToRender = event.target.data().definition;\n      } else {\n        contentToRender = event.target.data().id;\n      }\n      event.target.popperRefObj = event.target.popper({\n        content: () => {\n          var content = document.createElement(\"div-popper\");\n          content.innerHTML = contentToRender;\n          var x = document.createElement(\"style\");\n          var t = document.createTextNode(\"div-popper{background-color: #f6f8fa;color: black;border: 1px solid  #c4c8cc;border-radius: 5px;font-size:small;padding:10px}\");\n          x.appendChild(t);\n          document.head.appendChild(x);\n          document.body.appendChild(content);\n          return content;\n        },\n        popper: {\n          placement: 'top',\n        }\n      });\n    });\n\n    this.cy.removeListener('mouseout', 'node');\n    this.cy.on('mouseout', 'node', (event) => {\n      if (event.target.popper) {\n        event.target.popperRefObj.state.elements.popper.remove();\n        event.target.popperRefObj.destroy();\n      }\n    })\n  }\n\n  /**\n   * \n   * @param evt drop: aggiungo il nodo in base alle informazioni recuperate dal componente tree\n   */\n  drop(evt) {\n    var pos = {\n      x: evt.x, y: evt.y\n    };\n    if (this.parentNode) {\n      this.parentNodeElements.push(this.parentNode);\n      this.addElement.addNodo(this.cy, this.parentNode.data, this.parentNode.data, pos, this.parentNode.type);\n      this.cy.getElementById(this.parentNode.data).addClass('border')\n      this.cy.getElementById(this.parentNode.data).addClass('lexicalEntry');\n      if (this.isChecked === true) {\n        this.cy.getElementById(this.parentNode.data).style('label', this.parentNode.label);\n      }\n    }\n    if (this.senseNode) {\n      this.senseNodeElements.push(this.senseNode);\n      this.addElement.addNodo(this.cy, this.senseNode.senseInstanceName, this.senseNode.senseInstanceName, pos, this.senseNode.type, this.senseNode.definition);\n      this.cy.getElementById(this.senseNode.senseInstanceName).addClass('border')\n      this.cy.getElementById(this.senseNode.senseInstanceName).addClass('sense');\n      if (this.isChecked === true) {\n        this.cy.getElementById(this.senseNode.senseInstanceName).style('label', this.senseNode.label);\n      }\n    }\n    if (this.formNode) {\n      this.formNodeElements.push(this.formNode);\n      this.addElement.addNodo(this.cy, this.formNode.formInstanceName, this.formNode.formInstanceName, pos, this.formNode.type);\n      this.cy.getElementById(this.formNode.formInstanceName).addClass('border')\n      this.cy.getElementById(this.formNode.formInstanceName).addClass('form');\n      if (this.isChecked === true) {\n        this.cy.getElementById(this.formNode.formInstanceName).style('label', this.formNode.label);\n      }\n    }\n    this.cy.nodes().style('text-halign', 'center');\n    this.cy.nodes().style('text-valign', 'bottom');\n  }\n\n  /**\n   * resetta il viewport e il toggle label/id\n   */\n  resetView() {\n    this.cy.elements().style('display', 'none');\n    this.isChecked = false;\n  }\n\n  /**\n   * \n   * @param event checked event dello switch per visualizzare come label l'id o il valore della label visibile nel tree DA COMPLETARE\n   */\n  labelOrId(event) {\n    this.isChecked = event.checked;\n    if (event.checked === true) {\n      for (var i = 0; i \n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./cytoscape-graph.component.scss\n                \n                .popper-div { /* just an example */\n    border: 1px solid red;\n    background: #fff;\n    z-index: 9999;\n    padding: 0.25em;\n    pointer-events: none;\n}\n                \n                    ../mediaqueries/mediaquery.scss\n                \n                /* BREAKPOINT schermo \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CytoscapeGraphComponent', 'selector': 'app-cytoscape-graph'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'ViewportComponent', 'selector': 'app-viewport'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CytoscapeGraphComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataStorageService.html":{"url":"injectables/DataStorageService.html","title":"injectable - DataStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/data-storage/data-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchElements\n                            \n                            \n                                fetchForms\n                            \n                            \n                                fetchLexicalEntries\n                            \n                            \n                                fetchPos\n                            \n                            \n                                fetchSense\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/data-storage/data-storage.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchElements\n                        \n                    \n                \n            \n            \n                \nfetchElements(idEntrataLessicale: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/data-storage/data-storage.service.ts:31\n                \n            \n\n\n            \n                \n                    servizio recupero figli entrata lessicale\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idEntrataLessicale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchForms\n                        \n                    \n                \n            \n            \n                \nfetchForms(idEntrataLessicale: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/data-storage/data-storage.service.ts:38\n                \n            \n\n\n            \n                \n                    servizio recupero forms\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idEntrataLessicale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchLexicalEntries\n                        \n                    \n                \n            \n            \n                \nfetchLexicalEntries(text: string, searchMode: string, type: string, pos: string, formType: string, author: string, lang: string, status: string, offset: number, limit: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/data-storage/data-storage.service.ts:20\n                \n            \n\n\n            \n                \n                    servizio recupero LISTA entrate lessicali\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    searchMode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pos\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    author\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    offset\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchPos\n                        \n                    \n                \n            \n            \n                \nfetchPos()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/data-storage/data-storage.service.ts:53\n                \n            \n\n\n            \n                \n                    servizio recupero pos per filtro search\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchSense\n                        \n                    \n                \n            \n            \n                \nfetchSense(idEntrataLessicale: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/data-storage/data-storage.service.ts:46\n                \n            \n\n\n            \n                \n                    servizio recupero senses\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idEntrataLessicale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Element } from '../models/element.model';\nimport { Forms } from '../models/forms.model';\nimport { LexicalEntry } from '../models/lexicalEntry.model';\nimport { Pos } from '../models/pos.model';\nimport { Sense } from '../models/sense.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataStorageService {\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * servizio recupero LISTA entrate lessicali\n   */\n  fetchLexicalEntries(text: string, searchMode: string, type: string, pos: string, formType: string, author: string, lang: string,\n    status: string, offset: number, limit: number) {\n    return this.http.post(\n      'LexO-backend-beta/service/lexicon/data/lexicalEntries'\n      , { text, searchMode, type,  pos, formType, author, lang, status, offset, limit }\n    );\n  }\n  /**\n   * servizio recupero figli entrata lessicale\n   */\n\n  fetchElements(idEntrataLessicale: string): Observable{\n    return this.http.get('LexO-backend-beta/service/lexicon/data/'+idEntrataLessicale+ '/elements?key=lexodemo');\n  }\n  /**\n   * servizio recupero forms \n   */\n\n  fetchForms(idEntrataLessicale: string): Observable{\n    return this.http.get('LexO-backend-beta/service/lexicon/data/' + idEntrataLessicale + '/forms?key=lexodemo');\n  }\n\n  /**\n   * servizio recupero senses\n   */\n\n  fetchSense(idEntrataLessicale: string): Observable{\n    return this.http.get('LexO-backend-beta/service/lexicon/data/'+ idEntrataLessicale +'/senses?key=lexodemo');\n  }\n\n  /**\n   * servizio recupero pos per filtro search\n   */\n  fetchPos():Observable{\n    return this.http.get('LexO-backend-beta/service/lexicon/statistics/pos?key=lexodemo');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Element.html":{"url":"interfaces/Element.html","title":"interface - Element","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Element\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/element.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            elements\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        elements\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        elements:     [literal type]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [literal type]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Element{\n        type: string,\n        elements: [ {\n          label: string,\n          count: number,\n          hasChildren : boolean\n        }]\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Forms.html":{"url":"interfaces/Forms.html","title":"interface - Forms","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Forms\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/forms.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            confidence\n                                        \n                                \n                                \n                                        \n                                            creationDate\n                                        \n                                \n                                \n                                        \n                                            creator\n                                        \n                                \n                                \n                                        \n                                            form\n                                        \n                                \n                                \n                                        \n                                            formInstanceName\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            lastUpdate\n                                        \n                                \n                                \n                                        \n                                            lexicalEntry\n                                        \n                                \n                                \n                                        \n                                            lexicalEntryInstanceName\n                                        \n                                \n                                \n                                        \n                                            morphology\n                                        \n                                \n                                \n                                        \n                                            note\n                                        \n                                \n                                \n                                        \n                                            phoneticRep\n                                        \n                                \n                                \n                                        \n                                            targetSense\n                                        \n                                \n                                \n                                        \n                                            targetSenseInstanceName\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        confidence\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confidence:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creationDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creationDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        form\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        form:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formInstanceName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formInstanceName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastUpdate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastUpdate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lexicalEntry\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lexicalEntry:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lexicalEntryInstanceName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lexicalEntryInstanceName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        morphology\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        morphology:     [literal type]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [literal type]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        note\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        note:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneticRep\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneticRep:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targetSense\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        targetSense:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targetSenseInstanceName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        targetSenseInstanceName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Forms {\n  confidence: number,\n  creationDate: string,\n  creator: string,\n  form: string,\n  formInstanceName: string,\n  label: string,\n  lastUpdate: string,\n  lexicalEntry: string,\n  lexicalEntryInstanceName: string,\n  morphology: [{\n    trait: string,\n    value: string,\n  }],\n  note: string,\n  phoneticRep: string,\n  targetSense: string,\n  targetSenseInstanceName: string,\n  type: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/header/header.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/header/header.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n        LexO Graph Application\n    \n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            LexO Graph Application    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CytoscapeGraphComponent', 'selector': 'app-cytoscape-graph'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'ViewportComponent', 'selector': 'app-viewport'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LexicalEntry.html":{"url":"classes/LexicalEntry.html","title":"class - LexicalEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LexicalEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/lexicalEntry.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                list\n                            \n                            \n                                totalHits\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        list\n                        \n                    \n                \n            \n                \n                    \n                        Type :     [literal type]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/models/lexicalEntry.model.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalHits\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/models/lexicalEntry.model.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LexicalEntry {\n  totalHits: number\n  list: [{\n    creator: string,\n    lastUpdate: string,\n    creationDate: string,\n    confidence: number,\n    status: string,\n    revisor: string,\n    type: string,\n    pos: string,\n    label: string,\n    language: string,\n    author: string,\n    note: string,\n    hasChildren: boolean,\n    lexicalEntry: string,\n    lexicalEntryInstanceName: string,\n    morphology: [{\n      trait: string,\n      value: string\n    }],\n    completionDate: string,\n    revisionDate: string,\n  }\n  ]\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NodeService.html":{"url":"injectables/NodeService.html","title":"injectable - NodeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NodeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/servizi/node.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                convertFromLexicalSenses\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/servizi/node.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        convertFromLexicalSenses\n                        \n                    \n                \n            \n            \n                \nconvertFromLexicalSenses(lexEntryList: LexicalEntry)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/servizi/node.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lexEntryList\n                                    \n                                                LexicalEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TreeNodeCustom[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { LexicalEntry } from '../models/lexicalEntry.model';\nimport { TreeNodeCustom } from '../models/tree-node-custom.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NodeService {\n\n  constructor() { }\n\n  convertFromLexicalSenses(lexEntryList: LexicalEntry): TreeNodeCustom[] {\n    let result: TreeNodeCustom[] = [];\n    lexEntryList.list.forEach(lexicalList => {\n        let newEntry = {\n          label: lexicalList.label,\n          data: lexicalList.lexicalEntryInstanceName,\n          type: 'parentLevel',\n          pos: lexicalList.pos,\n          leaf: false,\n          children: []\n        };\n        result.push(newEntry)\n    });\n    return result;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Pos.html":{"url":"interfaces/Pos.html","title":"interface - Pos","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Pos\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/pos.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Pos {\n        label : string,\n        count : number\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Sense.html":{"url":"interfaces/Sense.html","title":"interface - Sense","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Sense\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/sense.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            concept\n                                        \n                                \n                                \n                                        \n                                            conceptInstanceName\n                                        \n                                \n                                \n                                        \n                                            confidence\n                                        \n                                \n                                \n                                        \n                                            creationDate\n                                        \n                                \n                                \n                                        \n                                            creator\n                                        \n                                \n                                \n                                        \n                                            definition\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            gloss\n                                        \n                                \n                                \n                                        \n                                            hasChildren\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            lastUpdate\n                                        \n                                \n                                \n                                        \n                                            lemma\n                                        \n                                \n                                \n                                        \n                                            lexicalEntry\n                                        \n                                \n                                \n                                        \n                                            lexicalEntryInstanceName\n                                        \n                                \n                                \n                                        \n                                            note\n                                        \n                                \n                                \n                                        \n                                            pos\n                                        \n                                \n                                \n                                        \n                                            sense\n                                        \n                                \n                                \n                                        \n                                            senseExample\n                                        \n                                \n                                \n                                        \n                                            senseInstanceName\n                                        \n                                \n                                \n                                        \n                                            senseTranslation\n                                        \n                                \n                                \n                                        \n                                            usage\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        concept\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        concept:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        conceptInstanceName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        conceptInstanceName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        confidence\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confidence:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creationDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creationDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        definition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        definition:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gloss\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gloss:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasChildren\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hasChildren:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastUpdate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastUpdate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lemma\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lemma:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lexicalEntry\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lexicalEntry:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lexicalEntryInstanceName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lexicalEntryInstanceName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        note\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        note:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pos:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sense\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sense:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        senseExample\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        senseExample:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        senseInstanceName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        senseInstanceName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        senseTranslation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        senseTranslation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        usage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Sense {\n    creator : string,\n    lastUpdate : string,\n    creationDate : string,\n    confidence : number,\n    sense : string,\n    senseInstanceName : string,\n    lexicalEntry : string,\n    lexicalEntryInstanceName : string,\n    pos : string,\n    lemma : string,\n    hasChildren : boolean,\n    label : string,\n    definition : string,\n    note : string,\n    usage : string,\n    concept : string,\n    conceptInstanceName : string,\n    description : string,\n    gloss : string,\n    senseExample : string, \n    senseTranslation : string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreeComponent.html":{"url":"components/TreeComponent.html","title":"component - TreeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TreeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tree/tree.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tree\n            \n\n            \n                styleUrls\n                ./tree.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tree.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                draggedEle\n                            \n                            \n                                fontIcon\n                            \n                            \n                                fontS\n                            \n                            \n                                fontSPos\n                            \n                            \n                                formType\n                            \n                            \n                                isLoading\n                            \n                            \n                                lang\n                            \n                            \n                                limit\n                            \n                            \n                                offset\n                            \n                            \n                                scrollHeight\n                            \n                            \n                                scrollToTop\n                            \n                            \n                                searchMode\n                            \n                            \n                                showHideMorphTraits\n                            \n                            \n                                status\n                            \n                            \n                                sub1\n                            \n                            \n                                totalCount\n                            \n                            \n                                type\n                            \n                            \n                                visualizedNode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addFormChildren\n                            \n                            \n                                    Private\n                                addSenseChildren\n                            \n                            \n                                mouseDown\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                nodeExpand\n                            \n                            \n                                onDragStart\n                            \n                            \n                                    Private\n                                onScroll\n                            \n                            \n                                retrieveSenses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                pos\n                            \n                            \n                                sensesFromLexo\n                            \n                            \n                                showF\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                invioNodoForm\n                            \n                            \n                                invioNodoParent\n                            \n                            \n                                invioNodoSense\n                            \n                            \n                                invioTotalCount\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                scroll\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataStorageService: DataStorageService, nodeService: NodeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tree/tree.component.ts:81\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataStorageService\n                                                  \n                                                        \n                                                                        DataStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nodeService\n                                                  \n                                                        \n                                                                        NodeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        pos\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/tree/tree.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sensesFromLexo\n                    \n                \n                \n                    \n                        Type :         TreeNodeCustom[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/tree/tree.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showF\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/tree/tree.component.ts:60\n                            \n                        \n                \n                    \n                        filtri ricerca\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"*\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/tree/tree.component.ts:40\n                            \n                        \n                \n                    \n                        variabili alberatura\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        invioNodoForm\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tree/tree.component.ts:76\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        invioNodoParent\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tree/tree.component.ts:75\n                            \n                        \n                \n                    \n                        event emitte per inviare parent node , form node e sense node\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        invioNodoSense\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tree/tree.component.ts:77\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        invioTotalCount\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tree/tree.component.ts:55\n                            \n                        \n                \n                    \n                        event emitter per inviare total count lexical entry da visualizzare all'apertura dell'app nella sidebar\n\n                    \n                \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        scroll\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nscroll($event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tree/tree.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        scroll to bottom: virtual scroll per caricamento ulteriori entrate lessicali\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addFormChildren\n                        \n                    \n                \n            \n            \n                \n                    \n                    addFormChildren(idNode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tree/tree.component.ts:98\n                \n            \n\n\n            \n                \n                    metodo che restituisce children form\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    idNode\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        nodo parent\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        array di figli di tipo form\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addSenseChildren\n                        \n                    \n                \n            \n            \n                \n                    \n                    addSenseChildren(idNode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tree/tree.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idNode\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mouseDown\n                        \n                    \n                \n            \n            \n                \nmouseDown(target)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tree/tree.component.ts:208\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    target\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        nodo draggato di tipo parent, sense(childS2level) o form(childF2level)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TreeNodeCustom\n\n                    \n                    \n                        oggetto treenodecustom con i dati relativi al nodo che sarà visualizzato nel cytoscape component\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tree/tree.component.ts:256\n                \n            \n\n\n            \n                \n                    unsubscribe subscriptions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tree/tree.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nodeExpand\n                        \n                    \n                \n            \n            \n                \nnodeExpand(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tree/tree.component.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        espansione nodo per aprire children alberatura\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDragStart\n                        \n                    \n                \n            \n            \n                \nonDragStart(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tree/tree.component.ts:213\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        onScroll\n                        \n                    \n                \n            \n            \n                \n                    \n                    onScroll($event: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('scroll', ['$event'])\n                \n            \n\n            \n                \n                    Defined in src/app/tree/tree.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        scroll to bottom: virtual scroll per caricamento ulteriori entrate lessicali\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        retrieveSenses\n                        \n                    \n                \n            \n            \n                \nretrieveSenses()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tree/tree.component.ts:237\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tree/tree.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        draggedEle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TreeNodeCustom\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tree/tree.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fontIcon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '0.8rem'\n                    \n                \n                    \n                        \n                                Defined in src/app/tree/tree.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fontS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '1rem'\n                    \n                \n                    \n                        \n                                Defined in src/app/tree/tree.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fontSPos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '0.8rem'\n                    \n                \n                    \n                        \n                                Defined in src/app/tree/tree.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"entry\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tree/tree.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/tree/tree.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tree/tree.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 200\n                    \n                \n                    \n                        \n                                Defined in src/app/tree/tree.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        offset\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/tree/tree.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scrollHeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tree/tree.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scrollToTop\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/tree/tree.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"startsWith\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tree/tree.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showHideMorphTraits\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tree/tree.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tree/tree.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sub1\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tree/tree.component.ts:34\n                        \n                    \n\n            \n                \n                    subscription\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tree/tree.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/tree/tree.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visualizedNode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TreeNodeCustom\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tree/tree.component.ts:64\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, HostListener, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { DataStorageService } from '../shared/data-storage/data-storage.service';\nimport { TreeNodeCustom } from '../shared/models/tree-node-custom.model';\nimport { NodeService } from '../shared/servizi/node.service';\n@Component({\n  selector: 'app-tree',\n  templateUrl: './tree.component.html',\n  styleUrls: ['./tree.component.scss']\n})\nexport class TreeComponent implements OnInit, OnDestroy {\n  /**\n   * \n   * @param $event scroll to bottom: virtual scroll per caricamento ulteriori entrate lessicali\n   */\n  @HostListener(\"scroll\", [\"$event\"]) private onScroll($event: any): void {\n    if ($event.target.offsetHeight + $event.target.scrollTop >= $event.target.scrollHeight - 1) {\n      if(this.formType === 'entry'){\n        this.retrieveSenses();\n      } else {\n        return\n      }\n    }\n    if(this.scrollToTop === true){\n      console.log('scroll to top!')\n    }\n  }\n  scrollHeight: string;\n\n  /**\n   * subscription\n   */\n  sub1: Subscription;\n\n  /**\n* variabili alberatura\n*\n*/\n  @Input()text: string = \"*\";\n  searchMode: string = \"startsWith\";\n  type: string = \"\";\n  @Input() pos: any = \"\";\n  formType: string = \"entry\";\n  author: string = \"\";\n  lang: string = \"\";\n  status: string = \"\";\n  offset: number = 0;\n  limit: number = 200;\n  totalCount: number;\n\n  /**\n   * event emitter per inviare total count lexical entry da visualizzare all'apertura dell'app nella sidebar\n   */\n  @Output() invioTotalCount = new EventEmitter();\n  /** \n   * filtri ricerca \n  */\n\n  @Input() showF: boolean = false;\n\n  @Input() sensesFromLexo: TreeNodeCustom[] = [];\n  // DRAG event variabile per visualizzare nodo\n  visualizedNode: TreeNodeCustom;\n  draggedEle: TreeNodeCustom;\n\n  isLoading: boolean = false;\n\n  fontS='1rem' \n  fontSPos= '0.8rem'\n  fontIcon ='0.8rem'\n  /**\n   * event emitte per inviare parent node , form node e sense node\n   */\n  @Output() invioNodoParent = new EventEmitter();\n  @Output() invioNodoForm = new EventEmitter();\n  @Output() invioNodoSense = new EventEmitter();\n\n  showHideMorphTraits: boolean;\n\n  scrollToTop: boolean = false;\n  \n  constructor(\n    private dataStorageService: DataStorageService,\n    private nodeService: NodeService) { }\n\n  ngOnInit(): void {\n    this.scrollHeight = '500px';\n    // recupero lista entrate lessicali da visualizzare nell'alberatura TO DO VIRTUAL SCROLL\n    this.retrieveSenses();\n  }\n\n  /**\n * metodo che restituisce children form \n * @param idNode nodo parent\n * @returns array di figli di tipo form\n */\n  private addFormChildren(idNode) {\n    let childrenForm = [];\n    this.dataStorageService.fetchForms(idNode).subscribe(el => {\n      el.forEach(e => {\n        let morphology;\n        morphology = e.morphology.map(e => {\n          return  e.value\n        }).join(' ');\n\n        let child2L = {\n          label: e.label,\n          data: e.label,\n          type: 'childF2L',\n          formInstanceName: e.formInstanceName,\n          morphology: morphology,\n          leaf: true\n        }\n        childrenForm.push(child2L);\n      });\n    });\n    return childrenForm;\n  }\n\n  private addSenseChildren(idNode) {\n    let childrenSense = [];\n    this.dataStorageService.fetchSense(idNode).subscribe(el => {\n      el.forEach(e => {\n        let child2L = {\n          label: e.label,\n          data: e.label,\n          type: 'childS2L',\n          definition: e.definition,\n          senseInstanceName: e.senseInstanceName,\n          leaf: true\n        }\n        childrenSense.push(child2L);\n      });\n    });\n    return childrenSense;\n  }\n  // \n  /**\n   * \n   * @param event espansione nodo per aprire children alberatura\n   */\n  nodeExpand(event) {\n    let idNode = event.node.data;\n    if (event.node.parent === undefined) {\n      this.sub1 = this.dataStorageService.fetchElements(idNode).subscribe(el => {\n        let tempForm = [];\n        let tempSense = [];\n        // salvo il parametro leaf in una variabile,\n        // se la forma o il senso non ha figli non viene visualizzata la freccia per espandere nodo, altrimenti si\n        let isLeaf: boolean;\n        el.elements.forEach(elemento => {\n          if (elemento.label === 'form') {\n            if (elemento.count > 0) {\n              isLeaf = false;\n            } else {\n              isLeaf = true;\n            }\n            // recupero forme\n            tempForm = [{\n              label: elemento.label,\n              leaf: isLeaf,\n              count: elemento.count,\n              type: 'childF1L',\n              children: []\n            }]\n\n            // chiamata metodo privato\n            let childrenForm = this.addFormChildren(idNode);\n            tempForm.forEach(el => {\n              el.children = childrenForm;\n            })\n            event.node.children = tempForm;\n          }\n          if (elemento.label === 'sense') {\n            if (elemento.count > 0) {\n              isLeaf = false;\n            } else {\n              isLeaf = true;\n            }\n            // let childrenSense = [];\n            // recupero sensi\n            tempSense = [{\n              label: elemento.label,\n              leaf: isLeaf,\n              count: elemento.count,\n              type: 'childS1L',\n              children: []\n            }]\n\n            let childrenSense = this.addSenseChildren(idNode);\n\n            tempSense.forEach(el => {\n              el.children = childrenSense;\n            })\n            event.node.children = [...event.node.children, ...tempSense];\n          }\n        })\n      });\n    }\n  }\n\n  /**\n   * \n   * @param target nodo draggato di tipo parent, sense(childS2level) o form(childF2level) \n   * @returns oggetto treenodecustom con i dati relativi al nodo che sarà visualizzato nel cytoscape component\n   */\n  mouseDown(target) {\n    this.visualizedNode = target;\n    return this.visualizedNode;\n  }\n\n  onDragStart(event) {\n    let parentNode;\n    let formChid;\n    let senseChild;    \n    if (this.visualizedNode.type === 'parentLevel') {\n      parentNode = this.visualizedNode;\n      this.invioNodoParent.emit(parentNode);\n    }\n    if (this.visualizedNode.type === 'childS2L') {\n      senseChild = this.visualizedNode;\n      this.invioNodoSense.emit(senseChild);\n    }\n    if (this.visualizedNode.type === 'childF2L') {\n      formChid = this.visualizedNode;\n      this.invioNodoForm.emit(formChid);\n    }\n    // mouse event over sopra nodo child1level form o sense, al trascinamento non si deve visualizzare alcun nodo\n    if (this.visualizedNode.type === 'childF1L' ||\n      this.visualizedNode.type === 'childS1L') {\n      event.stopPropagation();\n    }\n\n  }\n\n  retrieveSenses() {\n    this.isLoading = true;\n    this.sub1 = this.dataStorageService.fetchLexicalEntries(this.text, this.searchMode, this.type, this.pos,\n      this.formType, this.author, this.lang, this.status, this.offset, this.limit).pipe(take(1)).subscribe(lexicalEntry => {\n        if (lexicalEntry) {\n          this.isLoading = false;\n        }\n        if (lexicalEntry.list !== undefined) {\n          this.sensesFromLexo = this.nodeService.convertFromLexicalSenses(lexicalEntry);\n        }\n        this.totalCount = lexicalEntry.totalHits;\n        this.invioTotalCount.emit(this.totalCount)\n        this.limit += 99;\n      })\n  }\n\n  /**\n  * unsubscribe subscriptions\n  */\n  ngOnDestroy() {\n    this.sub1.unsubscribe();\n  }\n\n}\n\n    \n\n    \n              \n         \n           \n           {{node.label}} {{node.pos}}\n        \n         \n           {{node.label}} ({{node.count}}) \n        \n         \n           {{node.label}} \n          POS: {{node.morphology}},\n        \n         \n           {{node.label}} ({{node.count}}) \n        \n         \n          \n           \n             {{node.label}} \n        \n        \n    \n\n    \n                \n                    ./tree.component.scss\n                \n                :host {\n  overflow: auto;\n  display: block;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                     {{node.label}} {{node.pos}}                            {{node.label}} ({{node.count}})                             {{node.label}}           POS: {{node.morphology}},                            {{node.label}} ({{node.count}})                                                    {{node.label}}                 '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CytoscapeGraphComponent', 'selector': 'app-cytoscape-graph'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'ViewportComponent', 'selector': 'app-viewport'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TreeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TreeNodeCustom.html":{"url":"interfaces/TreeNodeCustom.html","title":"interface - TreeNodeCustom","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TreeNodeCustom\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/tree-node-custom.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    TreeNode\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            count\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            definition\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            formInstanceName\n                                        \n                                \n                                \n                                        \n                                            lexicalEntry\n                                        \n                                \n                                \n                                        \n                                            lexicalEntryInstanceName\n                                        \n                                \n                                \n                                        \n                                            pos\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            senseInstanceName\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        definition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        definition:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formInstanceName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formInstanceName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lexicalEntry\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lexicalEntry:         LexicalEntry[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LexicalEntry[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lexicalEntryInstanceName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lexicalEntryInstanceName:     string | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pos:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        senseInstanceName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        senseInstanceName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TreeNode } from \"primeng/api\";\nimport { LexicalEntry } from \"./lexicalEntry.model\";\nexport interface TreeNodeCustom extends TreeNode {\n  lexicalEntry: LexicalEntry[];\n  lexicalEntryInstanceName: string | undefined;\n  count?:number,\n  senseInstanceName?: string;\n  formInstanceName?:string;\n  pos: string;\n  type:string;\n  definition?:string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewportComponent.html":{"url":"components/ViewportComponent.html","title":"component - ViewportComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ViewportComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/viewport/viewport.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-viewport\n            \n\n            \n                styleUrls\n                ./viewport.component.scss,../mediaqueries/mediaquery.scss\n            \n\n\n\n            \n                templateUrl\n                ./viewport.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                eventsSubject\n                            \n                            \n                                expanded\n                            \n                            \n                                height\n                            \n                            \n                                istanzaCyComponent\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                nodoFormFromSidebar\n                            \n                            \n                                nodoParentFromSidebar\n                            \n                            \n                                nodoSenseFromSidebar\n                            \n                            \n                                onResized\n                            \n                            \n                                resetGraph\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formReceived\n                            \n                            \n                                parentReceived\n                            \n                            \n                                senseReceived\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/viewport/viewport.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formReceived\n                    \n                \n                \n                    \n                        Type :         TreeNodeCustom\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/viewport/viewport.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parentReceived\n                    \n                \n                \n                    \n                        Type :         TreeNodeCustom\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/viewport/viewport.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        senseReceived\n                    \n                \n                \n                    \n                        Type :         TreeNodeCustom\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/viewport/viewport.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/viewport/viewport.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nodoFormFromSidebar\n                        \n                    \n                \n            \n            \n                \nnodoFormFromSidebar($event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/viewport/viewport.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nodoParentFromSidebar\n                        \n                    \n                \n            \n            \n                \nnodoParentFromSidebar($event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/viewport/viewport.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        nodi di tipo parent, form e senso ricevuti da sidebar, ricevuti a sua volta dal componente tree\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nodoSenseFromSidebar\n                        \n                    \n                \n            \n            \n                \nnodoSenseFromSidebar($event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/viewport/viewport.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onResized\n                        \n                    \n                \n            \n            \n                \nonResized(event: ResizedEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/viewport/viewport.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            ResizedEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        evento resize, se la larghezza è minore a 236 si applicano degli stili alla colonna: font e icone diminuite\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetGraph\n                        \n                    \n                \n            \n            \n                \nresetGraph($event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/viewport/viewport.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        eventsSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/viewport/viewport.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expanded\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/viewport/viewport.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/viewport/viewport.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        istanzaCyComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CytoscapeGraphComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(CytoscapeGraphComponent, {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/viewport/viewport.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/viewport/viewport.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { animate, style, transition, trigger } from '@angular/animations';\nimport { TreeNodeCustom } from '../shared/models/tree-node-custom.model';\nimport { CytoscapeGraphComponent } from '../cytoscape-graph/cytoscape-graph.component';\nimport { ResizedEvent } from 'angular-resize-event';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-viewport',\n  templateUrl: './viewport.component.html',\n  styleUrls: ['./viewport.component.scss','../mediaqueries/mediaquery.scss']\n})\nexport class ViewportComponent implements OnInit {  \n  constructor() { }\n  @ViewChild(CytoscapeGraphComponent, { static: true }) istanzaCyComponent: CytoscapeGraphComponent;\n  @Input() parentReceived:TreeNodeCustom;\n  @Input() senseReceived: TreeNodeCustom;\n  @Input() formReceived: TreeNodeCustom;\n\n  eventsSubject: Subject = new Subject();\n  expanded:boolean = true;\n\n  width: number;\n  height: number;\n  ngOnInit(): void {\n  }\n \n  /**\n   * \n   * @param $event nodi di tipo parent, form e senso ricevuti da sidebar, ricevuti a sua volta dal componente tree\n   */\n  nodoParentFromSidebar($event){\n    this.parentReceived = $event;\n  }\n\n  nodoSenseFromSidebar($event){\n    this.senseReceived = $event;\n  }\n\n  nodoFormFromSidebar($event){\n    this.formReceived = $event;\n  }\n\n  resetGraph($event){\n    // se evento ricevuto da sidebar c è true, chiamo servizio in cytoscape c per resettare view\n    if($event === true){\n      this.istanzaCyComponent.resetView();\n      this.istanzaCyComponent.isChecked = false;\n    }\n  }\n\n  /**\n   * \n   * @param event evento resize, se la larghezza è minore a 236 si applicano degli stili alla colonna: font e icone diminuite\n   */\n  onResized(event: ResizedEvent) {\n    this.width = event.newRect.width;\n    this.height = event.newRect.height;\n\n    if(event.newRect.width \n    \n\n    \n        \n    \n        \n            \n        \n    \n            \n                \n                    \n                        \n                            \n                        \n                        \n                            to do\n                         -->\n                    \n        \n                \n            \n    \n    \n        \n    \n\n    \n\n    \n                \n                    ./viewport.component.scss\n                \n                \n  .main-layout {\n    display: flex;\n    flex-direction: row;\n  }  \n\n  #lateralColumn{\n    height: 94.7vh;\n    background-color:#f8f9fa;\n    z-index: 1;\n    float:left\n  }\n\n  #button-sidebar{\n    border-radius: 4px;\n    border: 1px solid #babfc4;\n    margin-top: 7%;\n  }\n\n  #resizable{\n    resize: horizontal;\n    overflow-y: hidden;\n    min-width: 100px;\n  }\n                \n                    ../mediaqueries/mediaquery.scss\n                \n                /* BREAKPOINT schermo \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                    to do                         -->                                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CytoscapeGraphComponent', 'selector': 'app-cytoscape-graph'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'ViewportComponent', 'selector': 'app-viewport'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ViewportComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/cytoscape-graph/cytoscape-graph.component.ts\n            \n            component\n            CytoscapeGraphComponent\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                src/app/cytoscape-graph/servizi/add-nodo.service.ts\n            \n            injectable\n            AddNodoService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/data-storage/data-storage.service.ts\n            \n            injectable\n            DataStorageService\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/app/shared/models/element.model.ts\n            \n            interface\n            Element\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/forms.model.ts\n            \n            interface\n            Forms\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/shared/models/lexicalEntry.model.ts\n            \n            class\n            LexicalEntry\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/pos.model.ts\n            \n            interface\n            Pos\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/sense.model.ts\n            \n            interface\n            Sense\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/shared/models/tree-node-custom.model.ts\n            \n            interface\n            TreeNodeCustom\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/shared/servizi/node.service.ts\n            \n            injectable\n            NodeService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/sidebar/sidebar.component.ts\n            \n            component\n            SidebarComponent\n            \n                10 %\n                (6/55)\n            \n        \n        \n            \n                \n                src/app/tree/tree.component.ts\n            \n            component\n            TreeComponent\n            \n                17 %\n                (7/39)\n            \n        \n        \n            \n                \n                src/app/viewport/viewport.component.ts\n            \n            component\n            ViewportComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^14.2.0\n        \n            @angular/cdk : ^14.2.5\n        \n            @angular/common : ^14.2.0\n        \n            @angular/compiler : ^14.2.0\n        \n            @angular/core : ^14.2.0\n        \n            @angular/forms : ^14.2.0\n        \n            @angular/material : ^14.2.5\n        \n            @angular/platform-browser : ^14.2.0\n        \n            @angular/platform-browser-dynamic : ^14.2.0\n        \n            @angular/router : ^14.2.0\n        \n            @fortawesome/angular-fontawesome : ^0.11.1\n        \n            @fortawesome/fontawesome-svg-core : ^6.2.0\n        \n            @fortawesome/free-solid-svg-icons : ^6.2.0\n        \n            @ng-bootstrap/ng-bootstrap : ^13.1.0\n        \n            angular-resize-event : ^3.2.0\n        \n            bootstrap : ^5.2.2\n        \n            cytoscape : 3.23.0\n        \n            cytoscape-popper : ^2.0.0\n        \n            primeicons : ^6.0.1\n        \n            primeng : ^14.1.2\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAppLexiconGraph\nThis project was generated with Angular CLI version 14.2.6.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCytoscapeGraphComponent\n\nCytoscapeGraphComponent\n\nAppModule -->\n\nCytoscapeGraphComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nTreeComponent\n\nTreeComponent\n\nAppModule -->\n\nTreeComponent->AppModule\n\n\n\n\n\nViewportComponent\n\nViewportComponent\n\nAppModule -->\n\nViewportComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
